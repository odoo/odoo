<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">

<t t-name="html_builder.BorderConfiguratorOption">
    <BuilderRow label="props.label">
        <BuilderNumberInput styleAction="{ mainParam: getStyleActionParam('width'), extraClass: props.withBSClass and 'border' }" unit="'px'" min="0" default="0" composable="true"/>
        <BuilderSelect styleAction="getStyleActionParam('style')" t-if="state.hasBorder">
            <BuilderSelectItem title="'Solid'" styleActionValue="'solid'"><div class="o_we_border_preview" style="border-style: solid;"/></BuilderSelectItem>
            <BuilderSelectItem title="'Dashed'" styleActionValue="'dashed'"><div class="o_we_border_preview" style="border-style: dashed;"/></BuilderSelectItem>
            <BuilderSelectItem title="'Dotted'" styleActionValue="'dotted'"><div class="o_we_border_preview" style="border-style: dotted;"/></BuilderSelectItem>
            <BuilderSelectItem title="'Double'" styleActionValue="'double'"><div class="o_we_border_preview" style="border-style: double; border-left: none; border-right: none;"/></BuilderSelectItem>
        </BuilderSelect>
        <BuilderColorPicker styleAction="getStyleActionParam('color')" t-if="state.hasBorder"/>
    </BuilderRow>

    <!-- TODO: handle the dependency with border_width_opt bg_color_opt-->
    <BuilderRow t-if="props.withRoundCorner" label.translate="Round Corners">
        <BuilderNumberInput styleAction="{ mainParam: 'border-radius', extraClass: props.withBSClass and 'rounded' }" unit="'px'" default="0" min="0" composable="true"/>
    </BuilderRow>
</t>
</templates>
