# Translation of Odoo Server.
# This file contains the translation of the following modules:
# 	* account_tax_python
# 
# Translators:
# Martin Trigaux, 2019
# Herve GUERIN <herve.guerin@auguria.fr>, 2019
# 
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server saas~12.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-26 08:16+0000\n"
"PO-Revision-Date: 2019-08-26 09:08+0000\n"
"Last-Translator: Herve GUERIN <herve.guerin@auguria.fr>, 2019\n"
"Language-Team: French (https://www.transifex.com/odoo/teams/41243/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#. module: account_tax_python
#: model:ir.model.fields,help:account_tax_python.field_account_tax__amount_type
msgid ""
"\n"
"    - Group of Taxes: The tax is a set of sub taxes.\n"
"    - Fixed: The tax amount stays the same whatever the price.\n"
"    - Percentage of Price: The tax amount is a % of the price:\n"
"        e.g 100 * 10% = 110 (not price included)\n"
"        e.g 110 / (1 + 10%) = 100 (price included)\n"
"    - Percentage of Price Tax Included: The tax amount is a division of the price:\n"
"        e.g 180 / (1 - 10%) = 200 (not price included)\n"
"        e.g 200 * (1 - 10%) = 180 (price included)\n"
"        "
msgstr ""
"\n"
"  - Groupe de taxes : La taxe est un ensemble de sous-impôts.\n"
"  - Fixe : Le montant de la taxe reste le même quel que soit le prix.\n"
"  - Pourcentage sur le prix hors taxes : Le montant de la taxe est un pourcentage direct du prix hors taxes, exemples avec une taxe à 10% :\n"
"      100 * 10 % = 110 (base de prix = 100 HT)\n"
"      110 / (1 + 10%) = 100 (base de prix = 110 TTC)\n"
"  - Pourcentage sur le prix TTC (toutes taxes comprises) : Le lien entre le pourcentage et le montant de la taxe est plus complexe, exemples avec une taxe à 10% :\n"
"      180 / (1 - 10%) = 200 (base de prix = 180 HT)\n"
"      200 * (1 - 10%) = 180 (base de prix = 200 TTC)"

#. module: account_tax_python
#: model:ir.model.fields,field_description:account_tax_python.field_account_tax__python_applicable
#: model:ir.model.fields,field_description:account_tax_python.field_account_tax_template__python_applicable
msgid "Applicable Code"
msgstr "Code applicable"

#. module: account_tax_python
#: model:ir.model.fields,help:account_tax_python.field_account_tax__python_compute
msgid ""
"Compute the amount of the tax by setting the variable 'result'.\n"
"\n"
":param base_amount: float, actual amount on which the tax is applied\n"
":param price_unit: float\n"
":param quantity: float\n"
":param company: res.company recordset singleton\n"
":param product: product.product recordset singleton or None\n"
":param partner: res.partner recordset singleton or None"
msgstr ""
"Calcule le montant de la taxe en retournant la variable 'result'.\n"
"\n"
":param base_amount: réel, montant réel sur lequel la taxe est appliquée\n"
":param price_unit: réel\n"
":param quantity: réel\n"
":param company: enregistrement de res.company\n"
":param product: enregistrement de product.product ou None\n"
":param partner: enregistrement de res.partner ou None"

#. module: account_tax_python
#: model:ir.model.fields,help:account_tax_python.field_account_tax_template__python_compute
msgid ""
"Compute the amount of the tax by setting the variable 'result'.\n"
"\n"
":param base_amount: float, actual amount on which the tax is applied\n"
":param price_unit: float\n"
":param quantity: float\n"
":param product: product.product recordset singleton or None\n"
":param partner: res.partner recordset singleton or None"
msgstr ""
"Calcule le montant de la taxe en retournant la variable 'result'.\n"
"\n"
":param base_amount: réel, montant réel sur lequel la taxe est appliquée\n"
":param price_unit: réel\n"
":param quantity: réel\n"
":param product: enregistrement de product.product ou None\n"
":param partner: enregistrement de res.partner ou None"

#. module: account_tax_python
#: model:ir.model.fields,help:account_tax_python.field_account_tax__python_applicable
msgid ""
"Determine if the tax will be applied by setting the variable 'result' to True or False.\n"
"\n"
":param price_unit: float\n"
":param quantity: float\n"
":param company: res.company recordset singleton\n"
":param product: product.product recordset singleton or None\n"
":param partner: res.partner recordset singleton or None"
msgstr ""
"Détermine si la taxe sera appliquée en retournant la variable 'result' à True ou False.\n"
"\n"
":param price_unit: réel\n"
":param quantity: réel\n"
":param company: enregistrement de res.company\n"
":param product: enregistrement de product.product ou None\n"
":param partner: enregistrement de res.partner ou None"

#. module: account_tax_python
#: model:ir.model.fields,help:account_tax_python.field_account_tax_template__python_applicable
msgid ""
"Determine if the tax will be applied by setting the variable 'result' to True or False.\n"
"\n"
":param price_unit: float\n"
":param quantity: float\n"
":param product: product.product recordset singleton or None\n"
":param partner: res.partner recordset singleton or None"
msgstr ""
"Détermine si la taxe sera appliquée en retournant la variable \"result\" à True ou False.\n"
"\n"
":param price_unit: réel\n"
":param quantity: réel\n"
":param product: enregistrement de product.product ou None\n"
":param partner: enregistrement de res.partner ou None"

#. module: account_tax_python
#: model:ir.model.fields,field_description:account_tax_python.field_account_tax__python_compute
#: model:ir.model.fields,field_description:account_tax_python.field_account_tax_template__python_compute
#: model:ir.model.fields.selection,name:account_tax_python.selection__account_tax__amount_type__code
#: model:ir.model.fields.selection,name:account_tax_python.selection__account_tax_template__amount_type__code
msgid "Python Code"
msgstr "Code Python"

#. module: account_tax_python
#: model:ir.model,name:account_tax_python.model_account_tax
msgid "Tax"
msgstr "Taxe"

#. module: account_tax_python
#: model:ir.model.fields,field_description:account_tax_python.field_account_tax__amount_type
#: model:ir.model.fields,field_description:account_tax_python.field_account_tax_template__amount_type
msgid "Tax Computation"
msgstr "Calcul de la taxe"

#. module: account_tax_python
#: model:ir.model,name:account_tax_python.model_account_tax_template
msgid "Templates for Taxes"
msgstr "Modèles pour les taxes"
