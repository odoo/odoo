# Translation of Odoo Server.
# This file contains the translation of the following modules:
# 	* account_tax_python
# 
# Translators:
# 敬雲 林 <chingyun@yuanchih-consult.com>, 2021
# 
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server saas~14.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-12 07:50+0000\n"
"PO-Revision-Date: 2021-09-14 12:20+0000\n"
"Last-Translator: 敬雲 林 <chingyun@yuanchih-consult.com>, 2021\n"
"Language-Team: Chinese (Taiwan) (https://app.transifex.com/odoo/teams/41243/zh_TW/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Language: zh_TW\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. module: account_tax_python
#: model:ir.model.fields,help:account_tax_python.field_account_tax__amount_type
msgid ""
"\n"
"    - Group of Taxes: The tax is a set of sub taxes.\n"
"    - Fixed: The tax amount stays the same whatever the price.\n"
"    - Percentage of Price: The tax amount is a % of the price:\n"
"        e.g 100 * (1 + 10%) = 110 (not price included)\n"
"        e.g 110 / (1 + 10%) = 100 (price included)\n"
"    - Percentage of Price Tax Included: The tax amount is a division of the price:\n"
"        e.g 180 / (1 - 10%) = 200 (not price included)\n"
"        e.g 200 * (1 - 10%) = 180 (price included)\n"
"        "
msgstr ""
"\n"
"    - 稅組：稅是一組子稅.\n"
"    - 固定: 無論價格如何，稅額都保持不變.\n"
"    - 價格百分比：稅額是價格的百分比.\n"
"       例如100 * 10％= 110 (不含價格)\n"
"       例如110 / (1 + 10％)= 100 (含價格)\n"
"    - 含稅價格的百分比：含稅額除以價格:\n"
"       例如180 / (1 - 10％) = 200 (不含價格)\n"
"       例如200 * (1 - 10％) = 180 (含價格\n"
"        "

#. module: account_tax_python
#: model:ir.model.fields,field_description:account_tax_python.field_account_tax__python_applicable
#: model:ir.model.fields,field_description:account_tax_python.field_account_tax_template__python_applicable
msgid "Applicable Code"
msgstr "適用代碼"

#. module: account_tax_python
#: model:ir.model.fields,help:account_tax_python.field_account_tax__python_compute
msgid ""
"Compute the amount of the tax by setting the variable 'result'.\n"
"\n"
":param base_amount: float, actual amount on which the tax is applied\n"
":param price_unit: float\n"
":param quantity: float\n"
":param company: res.company recordset singleton\n"
":param product: product.product recordset singleton or None\n"
":param partner: res.partner recordset singleton or None"
msgstr ""
"通過設定變量『結果』來計算稅的總額.\n"
"\n"
":參數 base_amount: 浮點型, 實際應納稅額\n"
":參數 price_unit: 浮點型\n"
":參數 quantity: 浮點型\n"
":參數 company: res.company 記錄單\n"
":參數 product: product.product 記錄單或者空\n"
":參數 partner: res.partner 記錄單或者空"

#. module: account_tax_python
#: model:ir.model.fields,help:account_tax_python.field_account_tax_template__python_compute
msgid ""
"Compute the amount of the tax by setting the variable 'result'.\n"
"\n"
":param base_amount: float, actual amount on which the tax is applied\n"
":param price_unit: float\n"
":param quantity: float\n"
":param product: product.product recordset singleton or None\n"
":param partner: res.partner recordset singleton or None"
msgstr ""
"通過設定變量『結果』來計算稅的總額.\n"
"\n"
":參數 base_amount: 浮點型, 實際應納稅額\n"
":參數 price_unit: 浮點型\n"
":參數 quantity: 浮點型\n"
":參數 company: res.company 記錄單\n"
":參數 product: product.product 記錄單或者空\n"
":參數 partner: res.partner 記錄單或者空"

#. module: account_tax_python
#: model:ir.model.fields,help:account_tax_python.field_account_tax__python_applicable
msgid ""
"Determine if the tax will be applied by setting the variable 'result' to True or False.\n"
"\n"
":param price_unit: float\n"
":param quantity: float\n"
":param company: res.company recordset singleton\n"
":param product: product.product recordset singleton or None\n"
":param partner: res.partner recordset singleton or None"
msgstr ""
"通過設定變量『結果』的真或假來決定是否計算應納稅額\n"
"\n"
":參數 price_unit: 浮點型\n"
":參數 quantity: 浮點型\n"
":參數 company: res.company 記錄單\n"
":參數 product: product.product 記錄單或者空\n"
":參數 partner: res.partner 記錄單或者空"

#. module: account_tax_python
#: model:ir.model.fields,help:account_tax_python.field_account_tax_template__python_applicable
msgid ""
"Determine if the tax will be applied by setting the variable 'result' to True or False.\n"
"\n"
":param price_unit: float\n"
":param quantity: float\n"
":param product: product.product recordset singleton or None\n"
":param partner: res.partner recordset singleton or None"
msgstr ""
"通過設定變量『結果』的真或假來決定是否計算應納稅額\n"
"\n"
":參數 price_unit: 浮點型\n"
":參數 quantity: 浮點型\n"
":參數 company: res.company 記錄單\n"
":參數 product: product.product 記錄單或者空\n"
":參數 partner: res.partner 記錄單或者空"

#. module: account_tax_python
#: model:ir.model.fields,field_description:account_tax_python.field_account_tax__python_compute
#: model:ir.model.fields,field_description:account_tax_python.field_account_tax_template__python_compute
#: model:ir.model.fields.selection,name:account_tax_python.selection__account_tax__amount_type__code
#: model:ir.model.fields.selection,name:account_tax_python.selection__account_tax_template__amount_type__code
msgid "Python Code"
msgstr "Python 代碼"

#. module: account_tax_python
#: model:ir.model,name:account_tax_python.model_account_tax
msgid "Tax"
msgstr "稅金"

#. module: account_tax_python
#: model:ir.model.fields,field_description:account_tax_python.field_account_tax__amount_type
#: model:ir.model.fields,field_description:account_tax_python.field_account_tax_template__amount_type
msgid "Tax Computation"
msgstr "稅金計算"

#. module: account_tax_python
#: model:ir.model,name:account_tax_python.model_account_tax_template
msgid "Templates for Taxes"
msgstr "稅金模板"
