# Translation of Odoo Server.
# This file contains the translation of the following modules:
# * account_test
# 
# Translators:
# Gab_Odoo <gab@odoo.com>, 2017
# Ermin Trevisan <trevi@twanda.com>, 2017
# darenkster <inactive+darenkster@transifex.com>, 2017
# Wolfgang Taferner <wolfgang.transifex@service.wt-io-it.at>, 2017
# Tina Rittmüller <tr@ife.de>, 2017
# Martin Trigaux <mat@odoo.com>, 2017
# Niki Waibel <niki.waibel@gmail.com>, 2017
# Thorsten Vocks <thorsten.vocks@openbig.org>, 2017
# Fabian Liesch <fabian.liesch@gmail.com>, 2017
# Henry Mineehen <info@mineehen.de>, 2017
# Renzo Meister <info@jamotion.ch>, 2017
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server 10.saas~18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-09-20 09:53+0000\n"
"PO-Revision-Date: 2017-09-20 09:53+0000\n"
"Last-Translator: Renzo Meister <info@jamotion.ch>, 2017\n"
"Language-Team: German (https://www.transifex.com/odoo/teams/41243/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#. module: account_test
#: model:ir.ui.view,arch_db:account_test.report_accounttest
msgid ""
"<br/>\n"
"                        <strong>Description:</strong>"
msgstr ""
"<br/>\n"
"<strong>Beschreibung:</strong>"

#. module: account_test
#: model:ir.ui.view,arch_db:account_test.report_accounttest
msgid "<strong>Name:</strong>"
msgstr "<strong>Name:</strong>"

#. module: account_test
#: model:ir.actions.act_window,name:account_test.action_accounting_assert
#: model:ir.actions.report,name:account_test.account_assert_test_report
#: model:ir.ui.menu,name:account_test.menu_action_license
msgid "Accounting Tests"
msgstr "Plausibilitätsprüfungen der Buchhaltung"

#. module: account_test
#: model:ir.ui.view,arch_db:account_test.report_accounttest
msgid "Accouting tests on"
msgstr "Plausibilitätsprüfung auf"

#. module: account_test
#: model:ir.model.fields,field_description:account_test.field_accounting_assert_test_active
msgid "Active"
msgstr "Aktiv"

#. module: account_test
#: model:accounting.assert.test,desc:account_test.account_test_03
msgid "Check if movement lines are balanced and have the same date and period"
msgstr ""
"Überprüfung, ob der Buchungssaldo ausgeglichen ist und ob Datum und Periode "
"übereinstimmen."

#. module: account_test
#: model:accounting.assert.test,desc:account_test.account_test_07
msgid ""
"Check on bank statement that the Closing Balance = Starting Balance + sum of"
" statement lines"
msgstr ""
"Überprüfung, ob der Endsaldo im Bankauszug =  Startsaldo + Saldo der "
"laufenden Buchungen"

#. module: account_test
#: model:accounting.assert.test,desc:account_test.account_test_06
msgid "Check that paid/reconciled invoices are not in 'Open' state"
msgstr "Überprüfung, ob bezahlte Rechnungen nicht im Status \"Offen\" verbleiben."

#. module: account_test
#: model:accounting.assert.test,desc:account_test.account_test_05_2
msgid ""
"Check that reconciled account moves, that define Payable and Receivable "
"accounts, are belonging to reconciled invoices"
msgstr ""
"Überprüfung, ob Ausgleichsbuchungen, die neue Kreditoren und Debitoren "
"erstellen, zu offenen Rechnungen gehören."

#. module: account_test
#: model:accounting.assert.test,desc:account_test.account_test_05
msgid ""
"Check that reconciled invoice for Sales/Purchases has reconciled entries for"
" Payable and Receivable Accounts"
msgstr ""
"Überprüfung, ob ein direkter Rechnungsausgleich im Verkauf/Einkauf zu "
"übereinstimmenden Buchungen auf den Kreditoren- und Debitorenkonten führt."

#. module: account_test
#: model:accounting.assert.test,desc:account_test.account_test_01
msgid "Check the balance: Debit sum = Credit sum"
msgstr "Überprüfe den Saldo: Summe im Soll = Summe im Haben"

#. module: account_test
#: model:ir.actions.act_window,help:account_test.action_accounting_assert
msgid "Click to create Accounting Test."
msgstr "Klicken, um Plausibilität der Buchhaltung zu testen"

#. module: account_test
#: model:ir.ui.view,arch_db:account_test.account_assert_form
msgid "Code Help"
msgstr "Eingabehilfe"

#. module: account_test
#: model:ir.ui.view,arch_db:account_test.account_assert_form
msgid ""
"Code should always set a variable named `result` with the result of your test, that can be a list or\n"
"a dictionary. If `result` is an empty list, it means that the test was succesful. Otherwise it will\n"
"try to translate and print what is inside `result`.\n"
"\n"
"If the result of your test is a dictionary, you can set a variable named `column_order` to choose in\n"
"what order you want to print `result`'s content.\n"
"\n"
"Should you need them, you can also use the following variables into your code:\n"
"    * cr: cursor to the database\n"
"    * uid: ID of the current user\n"
"\n"
"In any ways, the code must be legal python statements with correct indentation (if needed).\n"
"\n"
"Example: \n"
"    sql = '''SELECT id, name, ref, date\n"
"             FROM account_move_line \n"
"             WHERE account_id IN (SELECT id FROM account_account WHERE type = 'view')\n"
"          '''\n"
"    cr.execute(sql)\n"
"    result = cr.dictfetchall()"
msgstr ""
"Code sollte immer eine Variable namens 'result' mit dem Ergebnis Ihres Tests erstellen. Das kann eine Liste oder\n"
"ein Wörterbuch sein. Wenn 'result' eine leere Liste ist, war der Test erfolgreich. Ansonsten wird\n"
"versucht zu übersetzen und zu drucken, was in 'result' steht.\n"
"\n"
"Wenn das Ergebnis Ihres Tests ein Wörterbuch ist, können Sie eine Variable namens 'column_order' erstellen, um auszuwählen\n"
"in welcher Reihenfolge Sie die Inhalte von 'result' drucken wollen.\n"
"\n"
"Wenn Sie sie benötigen, können Sie auch die folgenden Variablen in Ihrem Code verwenden:\n"
"    *cr: cursor to the database\n"
"    *uid: ID of the current user\n"
"\n"
"In jeder Hinsicht muss der Code gültige Python-Anweisungen mit der richtigen Vertiefung haben (wenn nötig).\n"
"\n"
"Beispiel: \n"
"    sql='''SELECT id, name, ref, date\n"
"             FROM account_move_line \n"
"             WHERE account_id IN (SELECT id FROM account_account WHERE type='view')\n"
"          '''\n"
"    cr.execute(sql)\n"
"    result=cr.dictfetchall()"

#. module: account_test
#: model:ir.model.fields,field_description:account_test.field_accounting_assert_test_create_uid
msgid "Created by"
msgstr "Erstellt von"

#. module: account_test
#: model:ir.model.fields,field_description:account_test.field_accounting_assert_test_create_date
msgid "Created on"
msgstr "Erstellt am"

#. module: account_test
#: model:ir.ui.view,arch_db:account_test.account_assert_form
msgid "Description"
msgstr "Beschreibung"

#. module: account_test
#: model:ir.model.fields,field_description:account_test.field_accounting_assert_test_display_name
#: model:ir.model.fields,field_description:account_test.field_report_account_test_report_accounttest_display_name
msgid "Display Name"
msgstr "Anzeigename"

#. module: account_test
#: model:ir.ui.view,arch_db:account_test.account_assert_form
msgid "Expression"
msgstr "Ausdruck"

#. module: account_test
#: model:ir.model.fields,field_description:account_test.field_accounting_assert_test_id
#: model:ir.model.fields,field_description:account_test.field_report_account_test_report_accounttest_id
msgid "ID"
msgstr "ID"

#. module: account_test
#: model:ir.model.fields,field_description:account_test.field_accounting_assert_test___last_update
#: model:ir.model.fields,field_description:account_test.field_report_account_test_report_accounttest___last_update
msgid "Last Modified on"
msgstr "Zuletzt geändert am"

#. module: account_test
#: model:ir.model.fields,field_description:account_test.field_accounting_assert_test_write_uid
msgid "Last Updated by"
msgstr "Zuletzt aktualisiert durch"

#. module: account_test
#: model:ir.model.fields,field_description:account_test.field_accounting_assert_test_write_date
msgid "Last Updated on"
msgstr "Zuletzt aktualisiert am"

#. module: account_test
#: model:ir.ui.view,arch_db:account_test.account_assert_form
msgid "Python Code"
msgstr "Python Code"

#. module: account_test
#: model:ir.model.fields,field_description:account_test.field_accounting_assert_test_code_exec
msgid "Python code"
msgstr "Python Code"

#. module: account_test
#: model:ir.model.fields,field_description:account_test.field_accounting_assert_test_sequence
msgid "Sequence"
msgstr "Nummernfolge"

#. module: account_test
#: model:accounting.assert.test,name:account_test.account_test_01
msgid "Test 1: General balance"
msgstr "Test 1:  Saldenabstimmung"

#. module: account_test
#: model:accounting.assert.test,name:account_test.account_test_03
msgid "Test 3: Movement lines"
msgstr "Test 3: Buchungspositionen"

#. module: account_test
#: model:accounting.assert.test,name:account_test.account_test_05
msgid ""
"Test 5.1 : Payable and Receivable accountant lines of reconciled invoices"
msgstr "Test 5.1 : Kreditoren und Debitoren Buchungen der Rechnungsausgleiche"

#. module: account_test
#: model:accounting.assert.test,name:account_test.account_test_05_2
msgid "Test 5.2 : Reconcilied invoices and Payable/Receivable accounts"
msgstr "Test 5.2 : Rechnungsausgleiche und Kreditoren / Debitoren"

#. module: account_test
#: model:accounting.assert.test,name:account_test.account_test_06
msgid "Test 6 : Invoices status"
msgstr "Test 6 : Rechnungsstatus"

#. module: account_test
#: model:accounting.assert.test,name:account_test.account_test_07
msgid "Test 7 : Closing balance on bank statements"
msgstr "Test 7: Abschlußsaldo im Bankkontoauszug"

#. module: account_test
#: model:ir.model.fields,field_description:account_test.field_accounting_assert_test_desc
msgid "Test Description"
msgstr "Testbeschreibung"

#. module: account_test
#: model:ir.model.fields,field_description:account_test.field_accounting_assert_test_name
msgid "Test Name"
msgstr "Testbezeichnung"

#. module: account_test
#: model:ir.ui.view,arch_db:account_test.account_assert_form
#: model:ir.ui.view,arch_db:account_test.account_assert_tree
msgid "Tests"
msgstr "Tests"

#. module: account_test
#: code:addons/account_test/report/report_account_test.py:52
#, python-format
msgid "The test was passed successfully"
msgstr "Die Prüfung war erfolgreich"

#. module: account_test
#: model:ir.model,name:account_test.model_accounting_assert_test
msgid "accounting.assert.test"
msgstr "accounting.assert.test"

#. module: account_test
#: model:ir.model,name:account_test.model_report_account_test_report_accounttest
msgid "report.account_test.report_accounttest"
msgstr "report.account_test.report_accounttest"
