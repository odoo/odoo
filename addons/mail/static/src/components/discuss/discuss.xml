<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">

    <t t-name="mail.Discuss" owl="1">
        <div class="o_Discuss"
            t-att-class="{
                'o-adding-item': discuss ? discuss.__mfield_isAddingChannel(mself) or discuss.__mfield_isAddingChat(mself) : false,
                'o-mobile': env.messaging ? env.messaging.__mfield_device(mself).__mfield_isMobile(mself) : false,
            }"
        >
            <t t-if="!env.isMessagingInitialized()">
                <div class="o_Discuss_messagingNotInitialized"><i class="o_Discuss_messagingNotInitializedIcon fa fa-spinner fa-spin"/>Please wait...</div>
            </t>
            <t t-else="">
                <t t-if="!env.messaging.__mfield_device(mself).__mfield_isMobile(mself)">
                    <DiscussSidebar class="o_Discuss_sidebar"/>
                </t>
                <t t-if="env.messaging.__mfield_device(mself).__mfield_isMobile(mself)" t-call="mail.Discuss.content"/>
                <t t-else="">
                    <div class="o_Discuss_content">
                        <t t-call="mail.Discuss.content"/>
                    </div>
                </t>
                <t t-if="discuss.__mfield_hasModerationDiscardDialog(mself)">
                    <ModerationDiscardDialog messageLocalIds="discuss.__mfield_threadView(mself).__mfield_checkedMessages(mself).map(message => message.localId)" t-on-dialog-closed="_onDialogClosedModerationDiscard"/>
                </t>
                <t t-if="discuss.__mfield_hasModerationRejectDialog(mself)">
                    <ModerationRejectDialog messageLocalIds="discuss.__mfield_threadView(mself).__mfield_checkedMessages(mself).map(message => message.localId)" t-on-dialog-closed="_onDialogClosedModerationReject"/>
                </t>
            </t>
        </div>
    </t>

    <t t-name="mail.Discuss.content" owl="1">
        <t t-if="env.messaging.__mfield_device(mself).__mfield_isMobile(mself) and discuss.__mfield_activeMobileNavbarTabId(mself) === 'mailbox'">
            <DiscussMobileMailboxSelection class="o_Discuss_mobileMailboxSelection"/>
        </t>
        <t t-if="env.messaging.__mfield_device(mself).__mfield_isMobile(mself) and (discuss.__mfield_isAddingChannel(mself) or discuss.__mfield_isAddingChat(mself))">
            <div class="o_Discuss_mobileAddItemHeader">
                <AutocompleteInput
                    class="o_Discuss_mobileAddItemHeaderInput"
                    isFocusOnMount="true"
                    isHtml="discuss.__mfield_isAddingChannel(mself)"
                    placeholder="discuss.__mfield_isAddingChannel(mself) ? addChannelInputPlaceholder : addChatInputPlaceholder"
                    select="_onMobileAddItemHeaderInputSelect"
                    source="_onMobileAddItemHeaderInputSource"
                    t-on-o-hide="_onHideMobileAddItemHeader"
                />
            </div>
        </t>
        <t t-if="discuss.__mfield_threadView(mself)">
            <ThreadView
                class="o_Discuss_thread"
                t-att-class="{ 'o-mobile': env.messaging.__mfield_device(mself).__mfield_isMobile(mself) }"
                composerAttachmentsDetailsMode="'card'"
                hasComposer="discuss.__mfield_thread(mself).__mfield_model(mself) !== 'mail.box'"
                hasComposerCurrentPartnerAvatar="!env.messaging.__mfield_device(mself).__mfield_isMobile(mself)"
                hasComposerThreadTyping="true"
                hasMessageCheckbox="true"
                hasSquashCloseMessages="discuss.__mfield_thread(mself).__mfield_model(mself) !== 'mail.box'"
                haveMessagesMarkAsReadIcon="discuss.__mfield_thread(mself) === env.messaging.__mfield_inbox(mself)"
                haveMessagesReplyIcon="discuss.__mfield_thread(mself) === env.messaging.__mfield_inbox(mself)"
                selectedMessageLocalId="discuss.__mfield_replyingToMessage(mself) and discuss.__mfield_replyingToMessage(mself).localId"
                threadViewLocalId="discuss.__mfield_threadView(mself).localId"
                t-on-o-rendered="_onThreadRendered"
                t-ref="threadView"
            />
        </t>
        <t t-if="!discuss.__mfield_thread(mself) and (!env.messaging.__mfield_device(mself).__mfield_isMobile(mself) or discuss.__mfield_activeMobileNavbarTabId(mself) === 'mailbox')">
            <div class="o_Discuss_noThread">
                No conversation selected.
            </div>
        </t>
        <t t-if="env.messaging.__mfield_device(mself).__mfield_isMobile(mself) and discuss.__mfield_activeMobileNavbarTabId(mself) !== 'mailbox'">
            <NotificationList
                class="o_Discuss_notificationList"
                filter="discuss.__mfield_activeMobileNavbarTabId(mself)"
            />
        </t>
        <t t-if="env.messaging.__mfield_device(mself).__mfield_isMobile(mself) and !discuss.__mfield_isReplyingToMessage(mself)">
            <MobileMessagingNavbar
                class="o_Discuss_mobileNavbar"
                activeTabId="discuss.__mfield_activeMobileNavbarTabId(mself)"
                tabs="mobileNavbarTabs()"
                t-on-o-select-mobile-messaging-navbar-tab="_onSelectMobileNavbarTab"
            />
        </t>
        <t t-if="discuss.__mfield_isReplyingToMessage(mself)">
            <Composer
                class="o_Discuss_replyingToMessageComposer"
                composerLocalId="discuss.__mfield_replyingToMessage(mself).__mfield_originThread(mself).__mfield_composer(mself).localId"
                hasCurrentPartnerAvatar="!env.messaging.__mfield_device(mself).__mfield_isMobile(mself)"
                hasDiscardButton="true"
                hasThreadName="true"
                textInputSendShortcuts="['ctrl-enter', 'meta-enter']"
                t-on-o-message-posted="_onReplyingToMessageMessagePosted"
                t-ref="composer"
            />
        </t>
    </t>

</templates>
