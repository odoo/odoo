<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">

    <t t-name="mail.Composer" owl="1">
        <t t-if="composerView">
            <div class="o_Composer"
                t-att-class="{
                    'o-focused': composerView.isFocused,
                    'o-has-current-partner-avatar': composerView.hasCurrentPartnerAvatar,
                    'o-has-footer': composerView.hasFooter,
                    'o-has-header': composerView.hasHeader,
                    'o-is-in-thread-view': composerView.threadView,
                    'o-is-compact': composerView.isCompact,
                    'o-messaging-in-editing': composerView.messageViewInEditing,
                }"
                t-attf-class="{{ className }}"
                t-on-keydown="composerView.onKeydown"
                t-ref="root"
            >
                <t t-if="composerView.dropZoneView">
                    <DropZone
                        className="'o_Composer_dropZone'"
                        record="composerView.dropZoneView"
                    />
                </t>
                <t t-if="composerView.hasHeader">
                    <div class="o_Composer_coreHeader text-truncate">
                        <t t-if="composerView.threadView and composerView.threadView.replyingToMessageView">
                            Replying to <b t-esc="composerView.threadView.replyingToMessageView.message.authorName"/>
                            <i t-if="composerView.threadView.thread !== messaging.inbox" class="o_Composer_cancelReply fa fa-lg fa-times-circle rounded-circle p-0 ml-1" title="Stop replying" t-on-click="composerView.onClickStopReplying"/>
                        </t>
                        <t t-if="composerView.hasThreadName">
                            <span class="o_Composer_threadName">
                                on: <b><t t-esc="composerView.composer.activeThread.displayName"/></b>
                            </span>
                        </t>
                        <t t-if="composerView.hasFollowers and !composerView.composer.isLog">
                            <!-- Text for followers -->
                            <small class="o_Composer_followers">
                                <b class="text-muted">To: </b>
                                <em class="text-muted">Followers of </em>
                                <b>
                                    <t t-if="composerView.composer.activeThread.displayName">
                                        &#32;&quot;<t t-esc="composerView.composer.activeThread.displayName"/>&quot;
                                    </t>
                                    <t t-else="">
                                        this document
                                    </t>
                                </b>
                            </small>
                            <ComposerSuggestedRecipientList record="composerView.composerSuggestedRecipientListView"/>
                        </t>
                    </div>
                </t>
                <t t-if="composerView.hasCurrentPartnerAvatar">
                    <div class="o_Composer_sidebarMain">
                        <t t-if="!messaging.currentGuest or composerView.composer.activeThread.model !== 'mail.channel'">
                            <img class="o_Composer_currentPartnerAvatar rounded-circle" t-att-src="composerView.currentPartnerAvatar" alt="Avatar of user"/>
                        </t>
                        <t t-if="messaging.currentGuest and composerView.composer.activeThread.model === 'mail.channel'">
                            <img class="o_Composer_currentPartnerAvatar rounded-circle" t-attf-src="/mail/channel/{{ composerView.composer.activeThread.id }}/guest/{{ messaging.currentGuest.id }}/avatar_128?unique={{ messaging.currentGuest.name }}" alt="Avatar of guest"/>
                        </t>
                    </div>
                </t>
                <div
                    class="o_Composer_coreMain"
                    t-att-class="{
                        'o-composer-is-compact': composerView.isCompact,
                    }"
                >
                    <ComposerTextInput
                        className="'o_Composer_textInput'"
                        classNameObj="{
                            'o-composer-is-compact': composerView.isCompact,
                            'o_Composer_textInput-mobile': messaging.device.isSmall,
                            'o-has-current-partner-avatar': composerView.hasCurrentPartnerAvatar,
                        }"
                        record="composerView"
                        t-key="composerView.localId"
                    />
                    <div class="o_Composer_buttons" t-att-class="{ 'o-composer-is-compact': composerView.isCompact, 'o-isDeviceSmall': messaging.device.isSmall, 'o-messaging-in-editing': composerView and composerView.messageViewInEditing }">
                        <div class="o_Composer_toolButtons"
                            t-att-class="{
                                'o-composer-has-current-partner-avatar': composerView.hasCurrentPartnerAvatar,
                                'o-composer-is-compact': composerView.isCompact,
                            }">
                            <t t-if="composerView.isCompact">
                                <div class="o_Composer_toolButtonSeparator"/>
                            </t>
                            <div class="o_Composer_primaryToolButtons" t-att-class="{ 'o-composer-is-compact': composerView.isCompact }">
                                <button class="o_Composer_button o_Composer_buttonEmojis o_Composer_toolButton btn btn-light"
                                    t-att-class="{
                                        'o-open': composerView.emojisPopoverView,
                                        'o-isDeviceSmall': messaging.device.isSmall,
                                    }"
                                    t-on-keydown="composerView.onKeydownButtonEmojis"
                                    t-on-click="composerView.onClickButtonEmojis"
                                    t-ref="buttonEmojis"
                                >
                                    <i class="fa fa-smile-o"/>
                                </button>
                                <PopoverView t-if="composerView.emojisPopoverView" record="composerView.emojisPopoverView"/>
                                <button class="o_Composer_button o_Composer_buttonAttachment o_Composer_toolButton btn btn-light fa fa-paperclip" t-att-class="{ 'o-isDeviceSmall': messaging.device.isSmall }" title="Add attachment" type="button" t-on-click="composerView.onClickAddAttachment"/>
                            </div>
                            <t t-if="composerView.isExpandable">
                                <div class="o_Composer_secondaryToolButtons">
                                    <button class="btn btn-light fa fa-expand o_Composer_button o_Composer_buttonFullComposer o_Composer_toolButton" t-att-class="{ 'o-isDeviceSmall': messaging.device.isSmall }" title="Full composer" type="button" t-on-click="composerView.onClickFullComposer"/>
                                </div>
                            </t>
                        </div>
                        <t t-if="composerView.isCompact">
                            <t t-call="mail.Composer.actionButtons"/>
                        </t>
                    </div>
                </div>
                <t t-if="composerView.hasFooter">
                    <div class="o_Composer_coreFooter" t-att-class="{ 'o-composer-is-compact': composerView.isCompact }">
                        <t t-if="composerView.hasThreadTyping">
                            <ThreadTextualTypingStatus className="'o_Composer_threadTextualTypingStatus'" thread="composerView.composer.activeThread"/>
                        </t>
                        <AttachmentList
                            t-if="composerView.attachmentList"
                            className="'o_Composer_attachmentList'"
                            classNameObj="{ 'o-composer-is-compact': composerView.isCompact }"
                            record="composerView.attachmentList"
                        />
                        <t t-if="!composerView.isCompact">
                            <t t-call="mail.Composer.actionButtons"/>
                        </t>
                        <t t-if="composerView.messageViewInEditing">
                            <span class="text-muted">escape to <a href="#" t-on-click="composerView.onClickCancelLink">cancel</a>, enter to <a href="#" t-on-click="composerView.onClickSaveLink">save</a></span>
                        </t>
                    </div>
                </t>
            </div>
        </t>
    </t>

    <t t-name="mail.Composer.actionButtons" owl="1">
        <div class="o_Composer_actionButtons" t-att-class="{ 'o-composer-is-compact': composerView.isCompact }">
            <t t-if="composerView.hasSendButton">
                <button class="o_Composer_actionButton o_Composer_button o_Composer_buttonSend btn btn-primary"
                    t-att-class="{
                        'o-last': !composerView.hasDiscardButton,
                        'o-composer-is-compact': composerView.isCompact,
                        'o-has-current-partner-avatar': composerView.hasCurrentPartnerAvatar,
                    }"
                    t-att-disabled="!composerView.composer.canPostMessage ? 'disabled' : ''"
                    type="button"
                    t-on-click="composerView.onClickSend"
                >
                    <t t-if="!messaging.device.isSmall"><t t-esc="composerView.sendButtonText"/></t>
                    <t t-else=""><i class="fa fa-paper-plane-o"/></t>
                </button>
            </t>
            <t t-if="composerView.hasDiscardButton">
                <button class="o_Composer_actionButton o-last o_Composer_button o_Composer_buttonDiscard btn btn-secondary" t-att-class="{ 'o-composer-is-compact': composerView.isCompact, 'o-has-current-partner-avatar': composerView.hasCurrentPartnerAvatar }" type="button" t-on-click="composerView.onClickDiscard">
                    Discard
                </button>
            </t>
        </div>
    </t>

</templates>
