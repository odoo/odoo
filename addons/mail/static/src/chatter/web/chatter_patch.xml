<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">
    <t t-inherit="mail.Chatter" t-inherit-mode="extension">
        <xpath expr="//button[hasclass('o-mail-Chatter-sendMessage')]" position="after">
            <button t-if="props.hasMessageList" class="o-mail-Chatter-logNote btn text-nowrap me-2" t-att-class="{
                'btn-primary active': state.composerType === 'note',
                'btn-secondary': state.composerType !== 'note',
                'my-2': !props.compactHeight
            }" data-hotkey="shift+m" t-on-click="() => this.toggleComposer('note')">
                Log note
            </button>
            <div class="flex-grow-1 d-flex">
                <button t-if="props.hasActivities" class="o-mail-Chatter-activity btn btn-secondary text-nowrap" t-att-class="{ 'my-2': !props.compactHeight }" data-hotkey="shift+a" t-on-click="scheduleActivity">
                    <i class="fa fa-clock-o me-1"/>
                    <span>Activities</span>
                </button>
                <span class="o-mail-Chatter-topbarGrow flex-grow-1 pe-2"/>
                <FileUploader t-if="attachments.length === 0" fileUploadClass="'o-mail-Chatter-fileUploader'" multiUpload="true" onUploaded.bind="onUploaded" onClick="(ev) => this.onClickAttachFile(ev)">
                    <t t-set-slot="toggler">
                        <t t-call="mail.Chatter.attachFiles"/>
                    </t>
                </FileUploader>
                <t t-else="" t-call="mail.Chatter.attachFiles"/>
                <Dropdown t-if="props.hasFollowers" position="'bottom-end'" disabled="isDisabled" class="'o-mail-Followers d-flex me-1'" menuClass="'o-mail-Followers-dropdown flex-column'" menuDisplay="'d-flex'" title="followerButtonLabel" togglerClass="'o-mail-Followers-button btn btn-link text-action px-1 ' + (props.compactHeight ? '' : 'my-2')">
                    <t t-set-slot="toggler">
                        <i class="fa fa-user-o me-1" role="img"/>
                        <i t-if="state.thread.id and state.thread.followersCount === undefined" class="fa fa-circle-o-notch fa-spin"/>
                        <span t-else="" class="o-mail-Followers-counter" t-esc="state.thread.followersCount ?? 0"/>
                    </t>
                    <t t-set-slot="default">
                        <FollowerList onAddFollowers.bind="onAddFollowers" onFollowerChanged.bind="onFollowerChanged" thread="state.thread"/>
                    </t>
                </Dropdown>
                <button t-if="props.hasFollowers and state.thread.selfFollower" class="btn px-0" t-att-class="{ 'text-success': !unfollowHover.isHover, 'text-warning': unfollowHover.isHover, 'my-2': !props.compactHeight }" t-att-disabled="!props.threadId" t-on-click="onClickUnfollow" t-ref="unfollow">
                    <div class="position-relative">
                        <!-- Hidden element used to set the button maximum size -->
                        <span class="d-flex invisible text-nowrap">
                            <i class="me-1 fa fa-fw fa-eye-slash"/><t t-out="followingText.length > unfollowText.length ? followingText : unfollowText"/>
                        </span>
                        <span class="position-absolute end-0 top-0" t-att-class="{ 'text-warning': unfollowHover.isHover }">
                            <i class="me-1" t-att-class="{ 'fa fa-fw fa-times': unfollowHover.isHover, 'fa fa-fw fa-check': !unfollowHover.isHover }"/><span t-out="unfollowHover.isHover ? unfollowText : followingText"/>
                        </span>
                    </div>
                </button>
                <button t-if="!state.thread.selfFollower" class="o-mail-Chatter-follow btn btn-link  px-0 text-600" t-on-click="onClickFollow">
                    <div class="position-relative">
                        <span class="d-flex invisible text-nowrap">
                            <i class="me-1 fa fa-fw fa-eye-slash"/><t t-out="followingText.length > unfollowText.length ? followingText : unfollowText"/>
                        </span>
                        <span class="position-absolute end-0 top-0">
                            Follow
                        </span>
                    </div>
                </button>
            </div>
        </xpath>
        <xpath expr="//t[@name='composer type']/*[1]" position="before">
            <t t-if="state.composerType === 'message' and state.thread.followers.size > 0">
                <div class="flex-shrink-0 px-3 pt-3 text-truncate small mb-2" style="margin-left:48px">
                    <span class="fw-bold">To:</span> <t t-out="toRecipientsText"/>
                    <button class="o-mail-Chatter-recipientListButton btn btn-link badge rounded-pill border-0 p-1 ms-1" title="Show all recipients" t-on-click="onClickRecipientList">
                        <i class="fa fa-caret-down"/>
                    </button>
                </div>
            </t>
            <t t-set="type" t-value="state.composerType === 'message' ? 'message' : 'note'"/>
            <SuggestedRecipientsList t-if="props.hasFollowers and state.composerType !== 'note'" className="'px-3'" styleString="'margin-left:48px;'" thread="state.thread"/>
        </xpath>
        <xpath expr="//Composer" position="attributes">
            <attribute name="className">state.composerType === 'message' ? '' : 'pt-4'</attribute>
        </xpath>
        <xpath expr="//div[hasclass('o-mail-Chatter-content')]/*[1]" position="before">
            <t t-if="props.hasActivities and activities.length">
                <t t-call="mail.ActivityList"/>
            </t>
        </xpath>
    </t>

    <t t-name="mail.ActivityList">
        <div class="o-mail-ActivityList">
            <div class="d-flex pt-4 cursor-pointer fw-bolder" t-on-click="toggleActivities">
                <hr class="flex-grow-1 fs-3"/>
                <div class="d-flex align-items-center px-3">
                    <i class="fa fa-fw" t-att-class="state.showActivities ? 'fa-caret-down' : 'fa-caret-right'"/>
                    Planned Activities
                    <span t-if="!state.showActivities" class="badge rounded-pill ms-2 text-bg-success"><t t-esc="activities.length"/></span>
                </div>
                <hr class="flex-grow-1 fe-3"/>
            </div>
            <t t-if="state.showActivities">
                <t t-foreach="activities" t-as="activity" t-key="activity.id">
                    <Activity data="activity" onUpdate.bind="load" reloadParentView.bind="reloadParentView"/>
                </t>
            </t>
        </div>
    </t>
</templates>
