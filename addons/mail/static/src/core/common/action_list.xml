<?xml version="1.0" encoding="UTF-8" ?>
<templates xml:space="preserve">

<t t-name="mail.ActionList">
    <div class="o-mail-ActionList flex-shrink-0 d-flex" t-att-class="{ 'align-items-center': props.inline,'flex-column': !props.inline }">
        <t t-set="groupAttClass" t-value="{ 'flex-column w-100': !props.inline, 'o-inline': props.inline, 'o-rounded-bubble': props.inline and !props.odooControlPanelSwitchStyle, 'o-odooControlPanelSwitchStyle': props.odooControlPanelSwitchStyle }"/>
        <t t-foreach="groups" t-as="group" t-key="group_index">
            <span t-if="group.length" class="o-mail-ActionList-group btn-group" t-att-class="groupAttClass">
                <t t-foreach="group" t-as="action" t-key="action.id" t-call="mail.ActionList.action">
                    <t t-set="action" t-value="action"/>
                    <t t-set="groupSize" t-value="group.length"/>
                </t>
            </span>
            <t t-if="!group_last" t-call="mail.ActionList.groupSeparator"/>
        </t>
    </div>
</t>

<t t-name="mail.ActionList.groupSeparator">
    <span t-if="props.inline" class="text-muted align-self-stretch" t-att-class="{ 'ms-2 me-1': env.inDiscussApp }"/>
    <hr t-else="" class="mx-2 my-1 o-rounded-bubble"/>
</t>

<t t-name="mail.ActionList.action">
    <t t-if="action.dropdown">
        <Dropdown menuClass="(action.dropdown.menuClass || ' ') + ' o-discuss-dropdownMenu'">
            <t t-call="mail.ActionList.actionMain"/>
            <t t-set-slot="content">
                <t t-call="{{ action.dropdown.template }}">
                    <t t-set="templateParams" t-value="action.dropdown.templateParams?.(this)"/>
                </t>
            </t>
        </Dropdown>
    </t>
    <t t-else="" t-call="mail.ActionList.actionMain"/>
</t>

<t t-name="mail.ActionList.actionMain">
    <t t-set="btnClass" t-value="Object.entries({
        [action.btnClass ?? '']: true,
        'o-mail-ActionList-button btn btn-secondary m-0 btn-group-item': true,
        'o-first': action_first,
        'o-last': action_last,
        'o-odooControlPanelSwitchStyle': props.odooControlPanelSwitchStyle,
        'rounded-3': props.inline and !props.odooControlPanelSwitchStyle and !env.inComposer,
        'rounded-circle': props.inline and !props.odooControlPanelSwitchStyle and env.inComposer,
        'px-1': props.inline and props.odooControlPanelSwitchStyle,
        'o-inline': props.inline,
        'p-0': props.inline and !props.odooControlPanelSwitchStyle and !(ui.isSmall and props.inline) and !env.inComposer,
        'p-1': props.inline and !props.odooControlPanelSwitchStyle and !(ui.isSmall and props.inline) and env.inComposer,
        'border-0': props.inline and !props.odooControlPanelSwitchStyle and (action.iconLage ?? action.icon),
        'border-2 o-px-0_5 o-mx-0_5': props.inline and !props.odooControlPanelSwitchStyle and !(action.iconLage ?? action.icon),
        'px-3 py-2': props.dropdown and ui.isSmall,
        'py-1': props.dropdown and !ui.isSmall,
        'o-p-1_5': props.inline and ui.isSmall,
        'text-start px-2': !props.inline and !ui.isSmall,
        'active': action.isActive,
        'o-danger': action.danger,
        'o-success': action.success,
    }).filter(([_, val]) => val).map(([key, _]) => key).join(' ')"/>
    <t t-set="attrs" t-value="{ 'disabled': action.disabledCondition, 'name': action.id }"/>
    <t t-if="action.component and action.componentCondition" t-component="action.component" t-props="action.componentProps"/>
    <DropdownItem t-elif="props.dropdown" class="btnClass + ' d-flex align-items-center gap-1'" tag="'button'" onSelected="(ev) => action.onSelected(ev)" attrs="attrs">
        <t t-call="mail.ActionList.actionContent"/>
    </DropdownItem>
    <button t-else="" t-att-class="btnClass" t-att="Object.assign(attrs, { 'title': action.name })" t-on-click="(ev) => action.onSelected(ev)">
        <t t-call="mail.ActionList.actionContent"/>
    </button>
</t>

<t t-name="mail.ActionList.actionContent">
    <t t-if="action.icon?.template" t-call="{{ action.icon.template }}">
        <t t-set="templateParams" t-value="action.icon.params"/>
    </t>
    <i t-elif="props.inline and action.iconLarge" t-attf-class="{{ action.iconLarge }}" class="fa-fw"/>
    <i t-elif="action.icon" t-attf-class="{{ action.icon }}" t-att-class="{ 'o-fs-small': props.dropdown }" class="fa-fw"/>
    <span t-elif="action.name and props.inline" t-esc="action.name"/>
    <i t-else="action.name" class="fa-question fa-fw opacity-0"/>
    <span t-if="!props.inline" class="o-mail-ActionList-actionLabel fw-bold mx-1" t-attf-class="{{ action.nameClass }}" t-out="action.name"/>
</t>

</templates>
