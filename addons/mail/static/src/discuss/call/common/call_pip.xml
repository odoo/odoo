<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">
     <!--
          Tab-limited Call PiP.
          @deprecated: was used for browsers that do no support documentPictureInPicture web API but they now use popout window,
          which is a better experience over the tab-limited Call PiP.
     -->
    <t t-name="discuss.CallPip">
        <t t-if="true"/> <!-- disabled component, xpath kept for stable policy -->
        <div t-elif="pipService.state.active and !pipService.isNativePipAvailable and rtc.channel"
             class="o-discuss-CallPip position-fixed d-flex overflow-hidden shadow-lg rounded-3"
             t-att-class="{
                'o-dragging': state.isDragging,
                'o-resizing': state.isResizing
             }"
             t-ref="root"
             t-on-mousedown="onPipMousedown"
             t-on-touchstart="onPipTouchstart"
             t-on-mouseenter="onMouseenter"
             t-on-mouseleave="onMouseleave"
             t-on-click.capture="onClickCapture">

            <button class="o-discuss-CallPip-close o-text-white shadow-sm position-absolute btn p-0 d-flex align-items-center justify-content-center rounded-circle bg-transparent text-white border-0"
                    t-on-click="closePip"
                    title="Close picture-in-picture">
                <i class="oi oi-close" style="font-size: 14px;"/>
            </button>

            <div class="flex-fill overflow-hidden position-relative" style="pointer-events: auto;">
                <Call thread="rtc.channel" isPip="true"/>
            </div>

            <!-- Corner resize handles -->
            <div class="o-discuss-CallPip-resizeHandle o-discuss-CallPip-resizeHandle-nw"
                 t-on-mousedown="(ev) => this.onResizeStart(ev, 'nw')"
                 t-on-touchstart="(ev) => this.onResizeStart(ev, 'nw')"/>
            <div class="o-discuss-CallPip-resizeHandle o-discuss-CallPip-resizeHandle-ne"
                 t-on-mousedown="(ev) => this.onResizeStart(ev, 'ne')"
                 t-on-touchstart="(ev) => this.onResizeStart(ev, 'ne')"/>
            <div class="o-discuss-CallPip-resizeHandle o-discuss-CallPip-resizeHandle-sw"
                 t-on-mousedown="(ev) => this.onResizeStart(ev, 'sw')"
                 t-on-touchstart="(ev) => this.onResizeStart(ev, 'sw')"/>
            <div class="o-discuss-CallPip-resizeHandle o-discuss-CallPip-resizeHandle-se"
                 t-on-mousedown="(ev) => this.onResizeStart(ev, 'se')"
                 t-on-touchstart="(ev) => this.onResizeStart(ev, 'se')"/>

            <!-- Edge resize handles -->
            <div class="o-discuss-CallPip-resizeHandle o-discuss-CallPip-resizeHandle-n"
                 t-on-mousedown="(ev) => this.onResizeStart(ev, 'n')"
                 t-on-touchstart="(ev) => this.onResizeStart(ev, 'n')"/>
            <div class="o-discuss-CallPip-resizeHandle o-discuss-CallPip-resizeHandle-s"
                 t-on-mousedown="(ev) => this.onResizeStart(ev, 's')"
                 t-on-touchstart="(ev) => this.onResizeStart(ev, 's')"/>
            <div class="o-discuss-CallPip-resizeHandle o-discuss-CallPip-resizeHandle-e"
                 t-on-mousedown="(ev) => this.onResizeStart(ev, 'e')"
                 t-on-touchstart="(ev) => this.onResizeStart(ev, 'e')"/>
            <div class="o-discuss-CallPip-resizeHandle o-discuss-CallPip-resizeHandle-w"
                 t-on-mousedown="(ev) => this.onResizeStart(ev, 'w')"
                 t-on-touchstart="(ev) => this.onResizeStart(ev, 'w')"/>
        </div>
    </t>
</templates>
