<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">

    <t t-name="website_slides.SlideUploadCategory" owl="1">
        <div>
            <div t-if="state.alert.show" t-attf-class="alert {{state.alert.class}}"
                role="alert" t-out="state.alert.message" />
            <form
                id="o_w_slide_upload_category_form"
                t-att-class="{'clearfix': true, 'was-validated': state.form.wasValidated}"
                t-on-submit.prevent="(ev) => ev.preventDefault()"
            >
                <div class="row">
                    <!-- Left column: slide upload form -->
                    <div class="col-md-6">
                        <SlideUploadSourceTypes
                            t-if="props.slideCategory in sourceSettings"
                            attributes="sourceSettings[props.slideCategory]"
                            isLocalSource="state.form.isLocalSource"
                            onClickSourceType.bind="onClickSourceType"
                            onChangeFileInput.bind="onChangeFileInput"
                            onChangeUrl.bind="onChangeUrl"
                        />
                        <canvas id="data_canvas" class="d-none"/>
                        <t t-call="website_slides.UploadFormCommonInputs"/>
                    </div>
                    <!-- Right column: preview and tutorial -->
                    <div class="col-md-6">
                        <div class="img-thumbnail h-100">
                            <div
                                t-if="state.preview.show"
                                class="o_slide_preview h-100 flex-column justify-content-center"
                            >
                                <img
                                    referrerPolicy="no-referrer"
                                    t-att-src="state.form.slideImage"
                                    id="slide-image"
                                    title="Content Preview"
                                    alt="Content Preview"
                                    class="img-fluid"
                                />
                                <div
                                    t-att-class="{'d-none': state.preview.hideSlideVideoTitle, 'mt-1': true}"
                                    t-out="state.preview.videoTitle"
                                />
                            </div>
                            <div t-else="" class="p-3">
                                <t t-slot="tutorial"/>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <t t-if="state.form.isLoading" t-call="website_slides.UploadDialogLoading"/>
        <t t-call="website_slides.UploadBtns"/>
    </t>

    <!-- Slide Upload Category common part templates -->

    <t t-name="website_slides.UploadBtns">
        <div t-portal="'#o_w_slide_upload_btns'">
            <button
                t-if="props.canPublish"
                class="btn btn-primary o_w_slide_upload_published"
                t-on-click="() => this.onClickFormSubmit(true)"
            >
                <span>Save and Publish</span>
            </button>
            <button
                t-if="props.canUpload"
                t-att-class="{ 'btn': true, 'btn-primary': !props.canPublish }"
                t-on-click="() => this.onClickFormSubmit(false)"
            >
                <span>Save</span>
            </button>
        </div>
    </t>

    <t t-name="website_slides.UploadFormCommonInputs">
        <div class="mb-3">
            <label for="name" class="col-form-label">Title</label>
            <input
                t-model="state.form.slideName"
                id="name"
                name="name"
                placeholder="Title"
                class="form-control"
                required="required"
                autocomplete="off"
            />
        </div>
        <div t-if="!state.defaultCategoryID" class="mb-3">
            <label for="category_id" class="col-form-label">Section</label>
            <SelectMenu
                choices="state.choices.categories"
                value="state.choices.categoryId"
                onSelect.bind="onCategorySelect"
                togglerClass="'text-dark pe-1'"
            >
                <t t-out="displayCategoryValue"/>
                <t t-set-slot="bottomArea" t-slot-scope="select">
                    <DropdownItem
                            t-if="select.data.searchValue and !this.choiceExists(select.data.searchValue, select.data.choices)"
                            class="'btn text-primary'"
                            onSelected="() => this.onClickCreateCategoryBtn(select.data.searchValue)"
                        >
                            Create New Category "<i t-out="select.data.searchValue"/>"
                    </DropdownItem>
                </t>
            </SelectMenu>
        </div>
        <div class="mb-3">
            <label for="tag_ids" class="col-form-label">Tags</label>
            <SlideUploadSelectTags
                choices="state.choices.tags"
                multiSelect="true"
                value="state.choices.tagIds"
                onSelect.bind="onTagsSelect"
                togglerClass="'text-dark pe-1'"
            >
                <t t-set-slot="bottomArea" t-slot-scope="select">
                    <DropdownItem
                            t-if="select.data.searchValue and !this.choiceExists(select.data.searchValue, select.data.choices)"
                            class="'btn text-primary'"
                            onSelected="() => this.onClickCreateTagBtn(select.data.searchValue)"
                        >
                            Create New Tag "<i t-out="select.data.searchValue"/>"
                    </DropdownItem>
                </t>
            </SlideUploadSelectTags>
        </div>
        <div class="mb-3">
            <label for="duration" class="col-form-label">Estimated Completion Time</label>
            <div class="input-group">
                <input
                    t-model="state.form.duration"
                    type="number"
                    id="duration"
                    min="0"
                    name="duration"
                    placeholder='e.g. "15"'
                    class="form-control"
                    autocomplete="off"
                />
                <span class="input-group-text">Minutes</span>
            </div>
        </div>
    </t>

    <t t-name="website_slides.UploadDialogLoading">
        <div
            t-portal="'.o_w_slide_upload_dialog_content'"
            class="o_wslides_slide_upload_loading position-absolute h-100 w-100 text-center d-flex flex-column justify-content-center"
        >
            <h2 class="text-white">
                <span class="fa fa-spinner fa-pulse"/>
                <span>Loading content...</span>
            </h2>
        </div>
    </t>

</templates>
