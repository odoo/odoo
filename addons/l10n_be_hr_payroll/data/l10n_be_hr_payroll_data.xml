<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="hr_payroll.hr_rule_basic" model="hr.salary.rule">
        <field name="amount_python_compute">
result = contract.wage_with_holidays
        </field>
    </record>

<!-- CONTRIBUTION REGISTERS -->
    <record id="res_partner_onss" model="res.partner">
        <field name="name">Office National de Sécurité Sociale (ONSS)</field>
        <field name="supplier">1</field>
        <field eval="0" name="customer"/>
    </record>
    <record id="contrib_register_onss" model="hr.contribution.register">
        <field name="name">ONSS</field>
        <field name="note">National Office of Social Security</field>
        <field name="partner_id" ref="res_partner_onss"/>
    </record>
    <record id="res_partner_pp" model="res.partner">
        <field name="name">Fiscal Administration</field>
        <field name="supplier">1</field>
        <field eval="0" name="customer"/>
    </record>
    <record id="contrib_register_pp" model="hr.contribution.register">
        <field name="name">Fiscal Administration</field>
        <field name="partner_id" ref="res_partner_pp"/>
    </record>
    <record id="res_partner_meal_vouchers" model="res.partner">
        <field name="name">Meal Voucher Vendor</field>
        <field name="supplier">1</field>
        <field eval="0" name="customer"/>
    </record>
    <record id="contrib_register_meal_vouchers" model="hr.contribution.register">
        <field name="name">Meal Voucher Vendor</field>
        <field name="partner_id" ref="res_partner_meal_vouchers"/>
    </record>

<!-- HR SALARY RULE CATEGORIES-->
    <record id="hr_payroll_head_salary" model="hr.salary.rule.category">
        <field name="name">Gross</field>
        <field name="code">BRUT</field>
    </record>
    <record id="hr_payroll.COMP" model="hr.salary.rule.category">
        <field name="name">Company Part</field>
        <field name="code">COMP. PART</field>
    </record>
    <record id="hr_payroll_head_onss" model="hr.salary.rule.category">
        <field name="name">Worker Social Contribution</field>
        <field name="code">ONSS</field>
        <field name="parent_id" ref="hr_payroll.ALW"/>
    </record>
    <record id="hr_payroll_head_employment_bonus" model="hr.salary.rule.category">
        <field name="name">Employment Bonus</field>
        <field name="code">EmpBonus</field>
        <field name="parent_id" ref="hr_payroll.ALW"/>
    </record>
    <record id="hr_payroll_head_div_impos" model="hr.salary.rule.category">
        <field name="name">Misc. Taxable</field>
        <field name="code">DIV. IMPOS</field>
        <field name="parent_id" ref="hr_payroll.ALW"/>
    </record>
    <record id="hr_payroll_head_pp" model="hr.salary.rule.category">
        <field name="name">Withholding Tax Grid 2018 (Precompte Professionnel Bareme 2018)</field>
        <field name="code">PP</field>
        <field name="parent_id" ref="hr_payroll.DED"/>
    </record>
    <record id="hr_payroll_head_div_net" model="hr.salary.rule.category">
        <field name="name">Misc. Net</field>
        <field name="code">DIV. NET</field>
        <field name="parent_id" ref="hr_payroll.DED"/>
    </record>
    <record id="hr_payroll_head_child_alw" model="hr.salary.rule.category">
        <field name="name">Child Allowance Belgium</field>
        <field name="code">ChA</field>
        <field name="parent_id" ref="hr_payroll.DED"/>
    </record>
    <record id="hr_salary_rule_category_spec_soc_contribution" model="hr.salary.rule.category">
        <field name="name">Special social contribution</field>
        <field name="code">SSC</field>
        <field name="parent_id" ref="hr_payroll.DED"/>
    </record>

    <record id="hr_salary_rule_category_ip_part" model="hr.salary.rule.category">
        <field name="name">IP. Part.</field>
        <field name="code">IP. PART</field>
        <field name="parent_id" ref="hr_payroll.ALW"/>
    </record>

    <record id="hr_salary_rule_category_gross_with_ip" model="hr.salary.rule.category">
        <field name="name">Total Gross</field>
        <field name="code">GROSSIP</field>
    </record>

<!-- HR SALARY RULES-->
    <record id="hr_payroll_rules_maj" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_salary"/> 
        <field name="name">Worker Salary. Premium pay of 108%</field>
        <field name="code">SALARY</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.BASIC * 1.08</field>
    </record>
    <record id="hr_payroll_rules_employee" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_salary"/> 
        <field name="name">Gross Salary</field>
        <field name="code">SALARY</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = categories.BASIC
if contract.internet:
    result += 5.0
if contract.mobile:
    result += 12.0
        </field>
        <field name="sequence">20</field>
        <field name="appears_on_payslip" eval="False"/>
    </record>
    <record id="hr_payroll_rules_onss_rule" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_onss"/> 
        <field name="name">Social contribution</field>
        <field name="code">ONSS</field>
        <field name="sequence">41</field>
        <field name="condition_select">none</field>
        <field name="amount_select">percentage</field>
        <field name="amount_percentage_base">SALARY</field>
        <field name="amount_percentage">-13.07</field>
        <field name="register_id" ref="contrib_register_onss"/>
    </record>
    <record id="hr_salary_rule_employment_bonus_employees" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_employment_bonus"/> 
        <field name="name">Employment Bonus</field>
        <field name="code">EmpBonus.1</field>
        <field name="sequence">42</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = categories.BRUT &lt;= 2560.57</field> 
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
salary = categories.BRUT
if salary &lt;= 1641.62:
    result = 201.62
elif salary &lt;= 2560.57:
    result = 201.62 - (0.2194 * (salary - 1641.62))
        </field>
    </record>
    <record id="hr_salary_rule_employment_bonus_workers" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_employment_bonus"/> 
        <field name="name">Employment Bonus</field>
        <field name="code">EmpBonus.2</field>
        <field name="sequence">42</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = categories.BRUT + &lt;= 2560.57</field> 
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
salary = categories.BRUT
if salary &lt;= 1641.62:
    result = 217.75
elif salary &lt;= 2560.57:
    result = 217.75 - (0.2370 * (salary - 1641.62))
        </field>
    </record>

    <record id="hr_salary_rule_gross_with_ip" model="hr.salary.rule">
        <field name="name">Total Gross</field>
        <field name="sequence">90</field>
        <field name="code">GROSSIP</field>
        <field name="category_id" ref="l10n_be_hr_payroll.hr_salary_rule_category_gross_with_ip"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.ip)</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.BASIC + categories.ALW</field>
    </record>

    <record id="hr_salary_rule_ip_part" model="hr.salary.rule">
        <field name="category_id" ref="hr_salary_rule_category_ip_part"/>
        <field name="name">Intellectual Property</field>
        <field name="code">IP.PART</field>
        <field name="sequence">91</field>
        <field name="condition_select">python</field>
        <field name="condition_python">
result = bool(contract.ip)
        </field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = - categories.GROSSIP * contract.ip_wage_rate / 100.0
        </field>
    </record>

    <record id="hr_payroll_rules_mis_ex_onss" model="hr.salary.rule">
        <field name="category_id" ref="hr_salary_rule_category_spec_soc_contribution"/>
        <field name="name">Special social cotisation</field>
        <field name="code">M.ONSS</field>
        <field name="amount_select">fix</field>
        <field name="sequence">165</field>
        <field name="appears_on_payslip" eval="False"/>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
wage = categories.BASIC
if employee.resident_bool:
    result = 0.0
elif employee.marital in ['divorced', 'single', 'widower'] or (employee.marital in ['married', 'cohabitant'] and employee.spouse_fiscal_status=='without income'):
    if wage &gt;= 0.01 and wage &lt;= 1095.09:
        result = 0.0
    elif wage &gt;= 1095.10 and wage &lt;= 1945.38:
        result = 0.0
    elif wage &gt;= 1945.39 and wage &lt;= 2190.18:
        result = -min((wage - 1945.38) * 0.076, 18.60)
    elif wage &gt;= 2190.19 and wage &lt;= 6038.82:
        result = -min(18.60 + (wage - 2190.18) * 0.011, 60.94)
    else:
        result = -60.94
elif employee.marital in ['married', 'cohabitant'] and employee.spouse_fiscal_status=='with income':
    if wage &gt;= 0.01 and wage &lt;= 1095.09:
        result = 0.0
    elif wage &gt;= 1095.10 and wage &lt;= 1945.38:
        result = -9.30
    elif wage &gt;= 1945.39 and wage &lt;= 2190.18:
        result = -min(max((wage - 1945.38) * 0.076, 9.30), 18.60)
    elif wage &gt;= 2190.19 and wage &lt;= 6038.82:
        result = -min(18.60 + (wage - 2190.18) * 0.011, 51.64)
    else:
        result = -51.64
        </field>
    </record> 
    <record id="hr_payroll_rules_bareme" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_pp"/>
        <field name="name">Withholding Tax</field>
        <field name="code">P.P</field>
        <field name="sequence">120</field>
        <field name="condition_select">none</field>
        <field name="appears_on_payslip" eval="True"/>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
def compute_basic_bareme(value):
    if value &lt;= 12600.0:
        basic_bareme = value * 0.2675
    elif value &lt;= 18610.0:
        basic_bareme = 3370.5 + 0.428 * (value - 12600.0)
    elif value &lt;= 39660.0:
        basic_bareme = 5942.78 + 0.4815 * (value - 18610.0)
    else:
        basic_bareme = 16078.36 + 0.535 * (value - 39660.0)
    return float_round(basic_bareme, precision_rounding=0.01)

def convert_to_month(value):
    return float_round(value / 12.0, precision_rounding=0.01, rounding_method='DOWN')

# PART 1: Withholding tax amount computation
withholding_tax_amount = 0.0
lower_bound = categories.GROSS - categories.GROSS % 15

# yearly_gross_revenue = Revenu Annuel Brut
yearly_gross_revenue = lower_bound * 12.0

# yearly_net_taxable_amount = Revenu Annuel Net Imposable
if yearly_gross_revenue &lt;= 15733.33:
    yearly_net_taxable_revenue = yearly_gross_revenue * (1.0 - 0.3)
else:
    yearly_net_taxable_revenue = yearly_gross_revenue - 4720.0

# BAREME III: Non resident
if employee.resident_bool:
    basic_bareme = compute_basic_bareme(yearly_net_taxable_revenue)
    withholding_tax_amount = convert_to_month(basic_bareme)
else:
    # BAREME I: Isolated or spouse with income 
    if employee.marital in ['divorced', 'single', 'widower'] or (employee.marital in ['married', 'cohabitant'] and employee.spouse_fiscal_status=='with income'):
        basic_bareme = max(compute_basic_bareme(yearly_net_taxable_revenue) - 1690.6, 0.0)
        withholding_tax_amount = convert_to_month(basic_bareme)

    # BAREME II: spouse without income
    if employee.marital in ['married', 'cohabitant'] and employee.spouse_fiscal_status=='without income':
        yearly_net_taxable_revenue_for_spouse = min(yearly_net_taxable_revenue * 0.3, 10710.0)
        basic_bareme_1 = compute_basic_bareme(yearly_net_taxable_revenue_for_spouse)
        basic_bareme_2 = compute_basic_bareme(yearly_net_taxable_revenue - yearly_net_taxable_revenue_for_spouse)
        withholding_tax_amount = convert_to_month(max(basic_bareme_1 + basic_bareme_2 - 3381.2, 0))

# Reduction for isolated people and for other family charges
if employee.marital in ['divorced', 'single', 'widower'] or (employee.spouse_net_revenue &gt; 0.0 or employee.spouse_other_net_revenue &gt; 0.0):
    if employee.marital in ['divorced', 'single', 'widower']:
        withholding_tax_amount -= 25.0
    if employee.marital == 'widower' or (employee.marital in ['divorced', 'single', 'widower'] and employee.dependent_children):
        withholding_tax_amount -= 36.0
    if employee.disabled:
        withholding_tax_amount -= 36.0
    if employee.other_dependent_people and employee.dependent_seniors:
        withholding_tax_amount -= 73.0 * employee.dependent_seniors
    if employee.other_dependent_people and employee.dependent_juniors:
        withholding_tax_amount -= 36.0 * employee.dependent_juniors
    if employee.marital in ['married', 'cohabitant'] and employee.spouse_fiscal_status=='with income' and employee.spouse_net_revenue &lt;= 225.0:
        withholding_tax_amount -= 112.5
    if employee.marital in ['married', 'cohabitant'] and employee.spouse_fiscal_status=='with income' and not employee.spouse_net_revenue and employee.spouse_other_net_revenue &lt;= 450.0:
        withholding_tax_amount -= 225.0
if employee.spouse_net_revenue == 0.0 and employee.spouse_other_net_revenue == 0.0:
    if employee.disabled:
        withholding_tax_amount -= 36.0
    if employee.disabled_spouse_bool:
        withholding_tax_amount -= 36.0
    if employee.other_dependent_people and employee.dependent_seniors:
        withholding_tax_amount -= 73.0 * employee.dependent_seniors
    if employee.other_dependent_people and employee.dependent_juniors:
        withholding_tax_amount -= 36.0 * employee.dependent_juniors

# Child Allowances
if employee.dependent_children:
    if employee.dependent_children == 1:
        withholding_tax_amount -= 36.0
    if employee.dependent_children == 2:
        withholding_tax_amount -= 97.0
    if employee.dependent_children == 3:
        withholding_tax_amount -= 253.0
    if employee.dependent_children == 4:
        withholding_tax_amount -= 454.0
    if employee.dependent_children == 5:
        withholding_tax_amount -= 677.0
    if employee.dependent_children == 6:
        withholding_tax_amount -= 902.0
    if employee.dependent_children == 7:
        withholding_tax_amount -= 1128.0
    if employee.dependent_children &gt;= 8:
        withholding_tax_amount -= 1371.0 + (employee.dependent_children - 8) * 251.0

result = - max(withholding_tax_amount, 0.0)

        </field>
    </record>
    <record id="hr_payroll_rules_parent_company_car" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_div_impos"/>
        <field name="name">ATN Company Car</field>
        <field name="code">ATN.CAR</field>
        <field name="sequence">70</field>
        <field name="condition_select">python</field>
        <field name="condition_python">
result = bool(contract.transport_mode_car and contract.car_atn)
        </field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = contract.car_atn
        </field>
    </record>
    <record id="hr_salary_rule_atn_internet" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_div_impos"/>
        <field name="name">ATN Internet</field>
        <field name="code">ATN.INT</field>
        <field name="sequence">16</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.internet)</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = 5.0</field>
    </record>
    <record id="hr_salary_rule_atn_mobile" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_div_impos"/>
        <field name="name">ATN Mobile</field>
        <field name="code">ATN.MOB</field>
        <field name="sequence">17</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.mobile)</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = 12.0</field>
    </record>
    <record id="hr_payroll_rules_company_car_2" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_div_net"/>
        <field name="name">ATN Company Car</field>
        <field name="code">ATN.CAR.2</field>
        <field name="sequence">160</field>
        <field name="condition_select">python</field>
        <field name="condition_python">
result = bool(contract.transport_mode_car and contract.car_atn)
        </field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = -contract.car_atn
        </field>
    </record>
    <record id="hr_salary_rule_atn_internet_2" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_div_net"/>
        <field name="name">ATN Internet</field>
        <field name="code">ATN.INT.2</field>
        <field name="sequence">161</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = contract.internet</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = -5.0</field>
    </record>
    <record id="hr_salary_rule_atn_mobile_2" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_div_net"/>
        <field name="name">ATN Mobile</field>
        <field name="code">ATN.MOB.2</field>
        <field name="sequence">162</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = contract.mobile</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = -12.0</field>
    </record>
    <record id="hr_salary_rule_commission_on_target" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_div_net"/>
        <field name="name">Commission on Target</field>
        <field name="code">COM</field>
        <field name="sequence">170</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.commission_on_target)</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = contract.warrant_value_employee / 12.0</field>
        <field name="appears_on_payslip" eval="False"/>
    </record>
    <record id="hr_payroll_rules_ch_worker" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_div_net"/>
        <field name="name">Retain on Meal Voucher</field>
        <field name="code">MEAL_V_EMP</field>
        <field name="sequence">165</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.meal_voucher_amount)</field>
        <field name="amount_select">percentage</field>
        <field name="amount_percentage">-100.0</field>
        <field name="amount_percentage_base">contract.meal_voucher_amount - contract.meal_voucher_paid_by_employer</field>
        <field name="quantity">worked_days.WORK100 and worked_days.WORK100.number_of_days</field>
        <field name="appears_on_payslip" eval="True"/>
        <field name="register_id" ref="contrib_register_meal_vouchers"/>
    </record>
    <record id="hr_payroll_rules_reim_travel" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.DED"/>
        <field name="name">Reimbursement of travel expenses</field>
        <field name="code">Tr.E</field>
        <field name="amount_select">code</field>
        <field name="sequence">65</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.others_reimbursed_amount)</field>
        <field name="amount_python_compute">result = contract.others_reimbursed_amount</field>
    </record>
    <record id="hr_salary_rule_representation_fees" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_div_net"/>
        <field name="name">Representation Fees</field>
        <field name="code">REP.FEES</field>
        <field name="amount_select">code</field>
        <field name="sequence">171</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.representation_fees)</field>
        <field name="amount_python_compute">result = contract.representation_fees</field>
    </record>
    <record id="hr_salary_rule_ip" model="hr.salary.rule">
        <field name="category_id" ref="l10n_be_hr_payroll.hr_payroll_head_div_net"/>
        <field name="name">Intellectual Property</field>
        <field name="code">IP</field>
        <field name="amount_select">code</field>
        <field name="sequence">172</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.ip)</field>
        <field name="amount_python_compute">result = categories.GROSSIP * contract.ip_wage_rate / 100.0</field>
    </record>
    <record id="hr_salary_rule_ip_deduction" model="hr.salary.rule">
        <field name="category_id" ref="l10n_be_hr_payroll.hr_payroll_head_div_net"/>
        <field name="name">Intellectual Property Income Deduction</field>
        <field name="code">IP.DED</field>
        <field name="amount_select">code</field>
        <field name="sequence">173</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.ip)</field>
        <field name="amount_python_compute">
tax_rate = 0.15
ip_amount = categories.GROSSIP * contract.ip_wage_rate / 100.0
if ip_amount &gt;= 0.0 and ip_amount &lt;= 15660:
    tax_rate = tax_rate / 2.0
elif ip_amount &gt; 15660 and ip_amount &lt;=31320:
    tax_rate = tax_rate * 3.0 / 4.0
result = -min(ip_amount * tax_rate, 11745) 
        </field>
    </record>
    <record id="hr_payroll_rules_suppl_net" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_div_net"/>
        <field name="name">Net Supplement</field>
        <field name="code">Net.S</field>
        <field name="amount_select">code</field>
        <field name="sequence">185</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.additional_net_amount)</field>
        <field name="amount_python_compute">result = contract.additional_net_amount</field>
    </record>
    <record id="hr_payroll_rules_retained_net" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_div_net"/>
        <field name="name">Net retained</field>
        <field name="code">Net.R</field>
        <field name="amount_select">code</field>
        <field name="sequence">190</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.retained_net_amount)</field>
        <field name="amount_python_compute">result = -contract.retained_net_amount</field>
    </record>
    <record id="hr_payroll_salary_structure_employee" model="hr.payroll.structure">
        <field name="code">CP 200</field>
        <field name="name">Belgian Employee</field>
        <field eval="[(6, 0, [
            ref('hr_payroll_rules_parent_company_car'),
            ref('hr_payroll_rules_company_car_2'),
            ref('hr_salary_rule_atn_mobile_2'),
            ref('hr_salary_rule_atn_internet_2'),
            ref('hr_salary_rule_atn_internet'),
            ref('hr_salary_rule_atn_mobile'),
            ref('hr_payroll_rules_onss_rule'),
            ref('hr_salary_rule_employment_bonus_employees'),
            ref('hr_payroll_rules_employee'),
            ref('hr_payroll_rules_bareme'),
            ref('hr_payroll_rules_ch_worker'),
            ref('hr_payroll_rules_reim_travel'),
            ref('hr_payroll_rules_mis_ex_onss'),
            ref('hr_salary_rule_representation_fees'),
            ref('hr_payroll_rules_suppl_net'),
            ref('hr_payroll_rules_retained_net'),
            ref('hr_salary_rule_ip'),
            ref('hr_salary_rule_ip_deduction'),
            ref('hr_salary_rule_ip_part'),
            ref('hr_salary_rule_gross_with_ip')
        ])]" name="rule_ids"/>
        <field name="company_id" ref="base.main_company"/>    
        <field name="parent_id" ref="hr_payroll.structure_base"/>
    </record>
    <record id="hr_payroll_salary_structure_worker" model="hr.payroll.structure">
        <field name="code">C.P.219</field>
        <field name="name">Belgian Worker</field>
        <field eval="[(6, 0, [
            ref('hr_payroll_rules_maj'),
            ref('hr_payroll_rules_onss_rule'),
            ref('hr_salary_rule_employment_bonus_workers'),
            ref('hr_payroll_rules_bareme'),
            ref('hr_payroll_rules_ch_worker'),
            ref('hr_payroll_rules_reim_travel'),
            ref('hr_payroll_rules_mis_ex_onss'),
            ref('hr_salary_rule_representation_fees'),
            ref('hr_payroll_rules_suppl_net'),
            ref('hr_payroll_rules_retained_net'),
        ])]" name="rule_ids"/>
        <field name="company_id" ref="base.main_company"/>
        <field name="parent_id" ref="hr_payroll.structure_base"/>
        </record>

        <!-- Default advantage values -->
        <function model="ir.default" name="set" eval="('hr.contract', 'holidays', 20.0)"/>
        <function model="ir.default" name="set" eval="('hr.contract', 'commission_on_target', 0.0)"/>
        <function model="ir.default" name="set" eval="('hr.contract', 'fuel_card', 150.0)"/>
        <function model="ir.default" name="set" eval="('hr.contract', 'representation_fees', 150.0)"/>
        <function model="ir.default" name="set" eval="('hr.contract', 'internet', 38.0)"/>
        <function model="ir.default" name="set" eval="('hr.contract', 'mobile', 30.0)"/>
        <function model="ir.default" name="set" eval="('hr.contract', 'mobile_plus', 50.0)"/>
        <function model="ir.default" name="set" eval="('hr.contract', 'meal_voucher_amount', 7.45)"/>
        <function model="ir.default" name="set" eval="('hr.contract', 'eco_checks', 250.0)"/>
</odoo>
