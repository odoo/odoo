<?xml version="1.0" encoding="utf-8"?>
<openerp>
    <data noupdate="1">
        <!-- After installation of the module, open the related menu -->
        <record id="action_client_event_menu" model="ir.actions.client">
            <field name="name">Open Event Menu</field>
            <field name="tag">reload</field>
            <field name="params" eval="{'menu_id': ref('event.menu_event_event')}"/>
        </record>
        <record id="base.open_menu" model="ir.actions.todo">
            <field name="action_id" ref="action_client_event_menu"/>
            <field name="state">open</field>
        </record>

        <!-- Event-related subtypes for messaging / Chatter -->
        <record id="event.mt_event_registration" model="mail.message.subtype">
            <field name="name">New Registration</field>
            <field name="res_model">event.event</field>
            <field name="default" eval="False"/>
        </record>

        <!-- notify all employees of module installation -->
        <function model="mail.group" name="message_post">
            <!-- ids, subject, body, parent_id=False, type='notification', content_subtype='html' -->
            <value eval="[ref('mail.group_all_employees')]"/>
            <value>From the top menu Events, you can organize events, manage registrations, automate communication around your event and sell events through your quotations.</value>
            <value>Module Events has been installed</value>
        </function>
        <function id="default_auto_confirmation" model="ir.values" name="set_default" eval="('marketing.config.settings', 'auto_confirmation', True)"/>

        <!--   Set Default Value     -->
        <record model="ir.values" id="default_value_event_subscription">
            <field name="name">event_mail_id</field>
            <field name="key">default</field>
            <field name="key2"></field>
            <field eval="[(0, 0, {
                    'email_immediate': True,
                    'event_interval_type': 'after_subscription',
                    'email_template_id': ref('subscription_event')
                }),(0, 0, {
                    'event_interval_nbr': 2,
                    'event_interval_unit': 'days',
                    'event_interval_type': 'before_event',
                    'email_template_id': ref('before_event')
                }),(0, 0, {
                    'event_interval_nbr': 3,
                    'event_interval_unit': 'days',
                    'event_interval_type': 'after_event',
                    'email_template_id': ref('after_event')
            })]" name="value_unpickle"/>
            <field name="model">event.event</field>
        </record>

        <!-- Event Mail Scheduler-->
        <record forcecreate="True" id="ir_cron_event_mail_scheduler" model="ir.cron">
            <field name="name">Event mail scheduler</field>
            <field name="active">True</field>
            <field name="user_id" ref="base.user_root" />
            <field name="interval_number">1</field>
            <field name="interval_type">hours</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False" />
            <field eval="'()'" name="args"/>
            <field name="model">event.mail</field>
            <field name="function">action_event_mail_scheduler</field>
        </record>
    </data>
</openerp>
