<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="point_of_sale.TicketScreen" owl="1">
        <div class="ticket-screen screen" t-att-class="{ oe_hidden: !props.isShown }">
            <div class="screen-full-width d-flex w-100 h-100">
                <div class="rightpane pane-border d-flex flex-column flex-grow-1 w-100 h-50 h-md-100 bg-300 overflow-y-auto">
                    <div class="controls d-flex align-items-center justify-content-between p-3">
                        <t t-if="!ui.isSmall || !state.showSearchBar">
                            <div class="buttons d-flex gap-2">
                                <button class="discard btn btn-lg btn-light" t-on-click="() => this.pos.closeScreen()">
                                    <span class="search-icon">
                                        <i class="fa fa-angle-double-left"/>
                                    </span>
                                    <t t-if="!ui.isSmall">
                                        Back
                                    </t>
                                </button>
                                <button t-if="allowNewOrders" class="highlight btn btn-lg btn-primary" t-on-click="() => this.onCreateNewOrder()">New Order</button>
                            </div>
                        </t>
                        <t t-if="ui.isSmall">
                            <t t-if="state.showSearchBar">
                                <button class="arrow-left btn btn-lg btn-light" t-on-click="() => { state.showSearchBar = !state.showSearchBar }">
                                    <span class="search-icon">
                                        <i class="fa fa-angle-double-left"/>
                                    </span>
                                </button>
                            </t>
                            <t t-else="">
                                <button class="search btn btn-lg btn-light" t-on-click="() => { state.showSearchBar = !state.showSearchBar }">
                                    <span class="search-icon">
                                        <i class="fa fa-search"/>
                                    </span>
                                </button>
                            </t>
                        </t>
                        <SearchBar
                            t-if="state.showSearchBar"
                            config="getSearchBarConfig()"
                            placeholder="constructor.searchPlaceholder"
                            onSearch.bind="onSearch"
                            onFilterSelected.bind="onFilterSelected" />
                        <div t-if="shouldShowPageControls()" class="item">
                            <div class="page-controls">
                                <div class="previous" t-on-click="() => this.onPrevPage()">
                                    <i class="fa fa-fw fa-caret-left" role="img" aria-label="Previous Order List" title="Previous Order List"></i>
                                </div>
                                <div class="next" t-on-click="() => this.onNextPage()">
                                    <i class="fa fa-fw fa-caret-right" role="img" aria-label="Next Order List" title="Next Order List"></i>
                                </div>
                            </div>
                            <div class="page">
                                <span><t t-esc="getPageNumber()" /></span>
                            </div>
                        </div>
                    </div>
                    <div class="orders overflow-y-auto">
                        <t t-set="_filteredOrderList" t-value="getFilteredOrderList()" />
                        <t t-if="_filteredOrderList.length !== 0">
                            <div class="header-row d-flex text-bg-700 fw-bolder" t-att-class="{ oe_hidden: ui.isSmall }">
                                <div class="col wide p-2">Date</div>
                                <div class="col wide p-2">Receipt Number</div>
                                <div class="col p-2">Customer</div>
                                <div class="col wide p-2" t-if="showCardholderName()">Cardholder Name</div>
                                <div class="col p-2">Cashier</div>
                                <div class="col end p-2">Total</div>
                                <div class="col narrow p-2">Status</div>
                                <div class="col very-narrow p-2" name="delete"></div>
                            </div>
                            <t t-foreach="_filteredOrderList" t-as="order" t-key="order.cid">
                                <div class="order-row" t-att-class="{ 'highlight text-bg-primary': isHighlighted(order) }" t-on-click="() => this.onClickOrder(order)">
                                    <div class="col wide p-2 ">
                                        <div><t t-esc="getDate(order)"></t></div>
                                        <div t-if="ui.isSmall"><t t-esc="getTotal(order)"></t></div>
                                    </div>
                                    <div class="col wide p-2">
                                        <div><t t-esc="order.name"></t></div>
                                        <div t-if="ui.isSmall"><t t-esc="getStatus(order)"></t></div>
                                    </div>
                                    <div class="col p-2" t-if="!ui.isSmall">
                                        <div><t t-esc="getPartner(order)"></t></div>
                                    </div>
                                    <div t-if="showCardholderName() and !ui.isSmall" class="col p-2">
                                        <div><t t-esc="getCardholderName(order)"></t></div>
                                    </div>
                                    <div class="col p-2">
                                        <div t-if="ui.isSmall"><t t-esc="getPartner(order)"></t></div>
                                        <div t-att-class = "ui.isSmall ? 'cashier':''"><t t-esc="getCashier(order)"></t></div>
                                    </div>
                                    <div class="col end p-2" t-if="!ui.isSmall">
                                        <div><t t-esc="getTotal(order)"></t></div>
                                    </div>
                                    <div class="col narrow p-2" t-if="!ui.isSmall">
                                        <div><t t-esc="getStatus(order)"></t></div>
                                    </div>
                                    <div t-if="!shouldHideDeleteButton(order)" class="col very-narrow delete-button p-2" name="delete" t-on-click.stop="() => this.onDeleteOrder(order)">
                                        <i class="fa fa-trash" aria-hidden="true"/><t t-if="ui.isSmall"> Delete</t>
                                    </div>
                                    <div t-else="" class="col very-narrow p-2"></div>
                                </div>
                            </t>
                        </t>
                        <t t-else="">
                            <div class="empty-order-list m-5 text-center text-muted">
                                <i role="img" aria-label="Shopping cart" title="Shopping cart" class="fa fa-4x fa-shopping-cart"></i>
                                <h3 class="mt-2">No orders found</h1>
                            </div>
                        </t>
                    </div>
                </div>
                <div class="leftpane d-flex flex-column flex-grow-1 w-100 h-50 h-md-100 bg-200">
                    <t t-set="_selectedSyncedOrder" t-value="getSelectedSyncedOrder()" />
                    <t t-set="_selectedOrderlineId" t-value="getSelectedOrderlineId()" />
                    <OrderDetails
                        onClickOrderline.bind="onClickOrderline"
                        onClickRefundOrderUid.bind="onClickRefundOrderUid"
                        order="_selectedSyncedOrder"
                        selectedOrderlineId="_selectedOrderlineId"
                        highlightHeaderNote="_state.ui.highlightHeaderNote" />
                    <div class="pads border-top">
                        <div class="control-buttons d-flex flex-wrap border-bottom overflow-hidden">
                            <InvoiceButton
                                onInvoiceOrder.bind="onInvoiceOrder"
                                order="_selectedSyncedOrder" />
                            <ReprintReceiptButton order="_selectedSyncedOrder" />
                        </div>
                        <div class="subpads d-flex">
                            <ActionpadWidget
                                partner="getSelectedPartner()"
                                actionName="constructor.numpadActionName"
                                actionType="'refund'"
                                actionToTrigger.bind="onDoRefund"
                                isActionButtonHighlighted="getHasItemsToRefund()" />
                            <NumpadWidget
                                disabledModes="['price', 'discount']"
                                setNumpadMode="() => {}"
                                activeMode="_selectedOrderlineId and 'quantity'"
                                disableSign="true" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </t>

</templates>
