<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="point_of_sale.TicketScreen">
        <div class="ticket-screen screen h-100 bg-100">
            <div class="screen-full-width d-flex w-100 h-100">
                <div t-if="!ui.isSmall || pos.ticket_screen_mobile_pane === 'left'" class="rightpane pane-border d-flex flex-column flex-grow-1 w-100 h-100 h-lg-100 bg-200 overflow-y-auto">
                    <View type="ui.isSmall ? 'kanban' : 'list'"
                        resModel="'pos.order'"
                        searchViewId="webSession.view_ids.view_pos_order_filter"
                        className="'flex-grow-1 bg-100'"
                        context="props.context"
                        domain="[['config_id', 'in', [pos.config.id, ...pos.config.trusted_config_ids.map(x => x.id)]]]"
                        selectRecord="(x) => this.onClickOrder(x)"
                    />
                </div>
                <div t-if="(!ui.isSmall || pos.ticket_screen_mobile_pane === 'right')" class="leftpane d-flex flex-column flex-grow-1 gap-2 w-100 h-100 h-lg-100 bg-200 p-2">
                    <t t-set="_selectedSyncedOrder" t-value="getSelectedOrder()" />
                    <t t-set="_selectedOrderlineId" t-value="getSelectedOrderlineId()" />
                    <t t-if="_selectedSyncedOrder?.get_orderlines()?.length" > 
                        <div t-if="isOrderSynced" t-att-class="{ 'highlight text-danger': !getHasItemsToRefund() }" class="py-2 px-3 rounded-3 bg-100 text-center">
                            Select the product(s) to refund and set the quantity
                        </div>
                        <OrderWidget lines="_selectedSyncedOrder.lines" t-slot-scope="scope"
                            total="env.utils.formatCurrency(_selectedSyncedOrder.get_total_with_tax())"
                            tax="!env.utils.floatIsZero(_selectedSyncedOrder.get_total_tax()) and env.utils.formatCurrency(_selectedSyncedOrder.get_total_tax()) or ''"
                            generalNote="_selectedSyncedOrder?.general_note or ''">
                            <t t-set="line" t-value="scope.line" />
                            <Orderline line="line.getDisplayData()"
                                class="{'selected': line.id === getSelectedOrderlineId()}"
                                t-on-click="() => this.onClickOrderline(line)">
                                <t t-set="toRefundDetail" t-value="line.order_id?.uiState?.lineToRefund?.[line.uuid]" />
                                <li t-if="!pos.isProductQtyZero(line.refunded_qty)"
                                    class="info refund-note mt-1">
                                    <strong t-esc="env.utils.formatProductQty(line.refunded_qty)" />
                                    <span> Refunded</span>
                                </li>
                                <li t-if="!pos.isProductQtyZero(toRefundDetail?.qty)" class="info to-refund-highlight refund-note mt-1 fw-bold text-primary">
                                    <t t-set="_destinationOrderUid" t-value="toRefundDetail.destination_order_uuid"/>
                                    <t t-set="refundQty" t-value="env.utils.formatProductQty(toRefundDetail.qty)"/>
                                    <t t-if="_destinationOrderUid">
                                        Refunding <t t-esc="refundQty" /> in
                                        <span t-esc="_destinationOrderUid"
                                            class="order-link ms-1 text-decoration-underline cursor-pointer"
                                            t-on-click.stop="() => this.onClickRefundOrderUid(_destinationOrderUid)" />
                                    </t>
                                    <t t-else="">
                                        To Refund: <t t-esc="refundQty" />
                                    </t>
                                </li>
                            </Orderline>
                        </OrderWidget>
                        <div class="pads">
                            <div class="control-buttons d-flex gap-2 pb-2">
                                <button class="edit-order-payment control-button btn btn-light btn-lg lh-lg flex-grow-1 flex-shrink-1" t-on-click="() => this.pos.orderDetails(_selectedSyncedOrder)">
                                    <i class="fa fa-pencil-square-o me-1" /> Details
                                </button>
                                <t t-if="isOrderSynced">
                                    <InvoiceButton
                                        onInvoiceOrder.bind="onInvoiceOrder"
                                        order="_selectedSyncedOrder" />
                                    <button class="control-button btn btn-light btn-lg lh-lg flex-grow-1 flex-shrink-1" t-on-click="() => doPrint.call(_selectedSyncedOrder)">
                                        <i t-attf-class="fa {{doPrint.status === 'loading' ? 'fa-fw fa-spin fa-circle-o-notch' : 'fa-print'}} me-1" />Print Receipt
                                    </button>
                                </t>
                            </div>
                            <t t-if="isOrderSynced">
                                <div class="subpads d-flex flex-column">
                                    <Numpad class="'pb-2'" buttons="getNumpadButtons()"/>
                                    <ActionpadWidget
                                        partner="getSelectedOrder()?.get_partner()"
                                        actionName.translate="Refund"
                                        actionToTrigger.bind="onDoRefund"
                                    />
                                </div>
                            </t>
                            <div t-else="" class="pads border-top d-flex gap-2" >
                                <BackButton onClick="() => pos.onClickBackButton()"/>
                                <button class="button validation load-order-button w-100 btn btn-lg btn-primary py-3" t-on-click="() => this._setOrder(_selectedSyncedOrder)">Load Order</button>
                            </div>
                        </div>
                    </t>
                    <t t-else="">
                        <CenteredIcon icon="'fa-shopping-cart fa-4x'" text.translate="'Select an order'" class="'bg-100 h-100'"/>
                        <BackButton t-if="ui.isSmall" onClick="() => pos.onClickBackButton()"/>
                    </t>
                </div>
            </div>
        </div>
    </t>

</templates>
