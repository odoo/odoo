<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="point_of_sale.RadioProductAttribute">
        <div class="configurator_radio" t-ref="root">
            <div class="d-flex flex-wrap gap-3">
                <t t-foreach="props.attribute.values()" t-as="value" t-key="value.id">
                    <div class="attribute-name-cell form-check">
                        <input 
                            type="radio"
                            t-att-checked="value.id === props.selected.id"
                            t-on-change="() => props.setSelected(value)"
                            t-att-disabled="value.doHaveConflictWith(props.allSelectedValues)" 
                            t-att-name="value.attribute_id.id"
                            t-attf-id="{{ value.attribute_id.id }}_{{ value.id }}"
                            class="form-check-input radio-check"
                        />
                        <label t-attf-for="{{ value.attribute_id.id }}_{{ value.id }}">
                            <span t-att-class="{ 'text-muted': value.doHaveConflictWith(props.allSelectedValues) }" t-esc="value.name"/>
                            <div t-if="value.price_extra" class="price-extra-cell d-inline-block ms-2">
                                <span class="price_extra px-2 py-1 rounded-pill text-bg-info">
                                    <t t-esc="getFormatPriceExtra(value.price_extra)"/>
                                </span>
                            </div>
                        </label>
                    </div>
                    <div t-if="value.id == props.selected.id and value.is_custom" class="custom-value-cell">
                        <input type="text" t-att-value="props.customValue" t-on-change="(e) => props.setCustomValue(e.target.value)" class="custom_value form-control form-control-lg mt-2" />
                    </div>
                </t>
            </div>
        </div>
    </t>

    <t t-name="point_of_sale.PillsProductAttribute">
        <div class="configurator_radio" t-ref="root">
            <div class="d-flex flex-wrap gap-2">
                <t t-foreach="props.attribute.values()" t-as="value" t-key="value.id">
                    <div class="attribute-name-cell" t-att-class="{'ptav-not-available': value.excluded}">
                        <input 
                            type="radio"
                            t-att-checked="value.id === props.selected.id"
                            t-on-change="() => props.setSelected(value)" 
                            t-att-name="value.attribute_id.id" 
                            t-attf-id="{{ value.attribute_id.id }}_{{ value.id }}" 
                            class="form-check-input d-none"
                        />
                        <label
                            t-attf-class="btn btn-secondary btn-lg lh-lg d-flex {{ value.id == props.selected.id ? 'active' : '' }}"
                            t-att-name="value.name"
                            t-attf-for="{{ value.attribute_id.id }}_{{ value.id }}">
                            <span t-att-class="{ 'text-muted': value.doHaveConflictWith(props.allSelectedValues) }" t-esc="value.name"/>
                            <div t-if="value.price_extra" class="price-extra-cell d-inline-block ms-2">
                                <span class="price_extra px-2 py-1 rounded-pill text-bg-info">
                                    <t t-esc="getFormatPriceExtra(value.price_extra)"/>
                                </span>
                            </div>
                        </label>
                    </div>
                    <div t-if="value.id == props.selected.id and value.is_custom" class="custom-value-cell">
                        <input type="text" t-att-value="props.customValue" t-on-change="(e) => props.setCustomValue(e.target.value)" class="custom_value form-control form-control-lg mt-2" />
                    </div>
                </t>
            </div>
        </div>
    </t>

    <t t-name="point_of_sale.SelectProductAttribute">
        <div>
            <t t-set="is_custom" t-value="false"/>

            <select class="configurator_select form-select form-select-md" t-on-change="(e) => this.onChange(e)">
                <t t-foreach="props.attribute.values()" t-as="value" t-key="value.id">
                    <option t-att-value="value.id" t-att-disabled="value.doHaveConflictWith(props.allSelectedValues)"  t-att-class="{'ptav-not-available': value.excluded}">
                        <t t-set="is_custom" t-value="is_custom || (value.is_custom and value.id == props.selected.id)"/>
                        <t t-esc="value.name"/>
                        <t t-if="value.price_extra">
                            <t t-esc="getFormatPriceExtra(value.price_extra)"/>
                        </t>
                    </option>
                </t>
            </select>

            <input class="custom_value form-control form-control-lg mt-2" t-if="is_custom" type="text" t-att-value="props.customValue" t-on-change="(e) => props.setCustomValue(e.target.value)"/>
        </div>
    </t>

    <t t-name="point_of_sale.ColorProductAttribute">
        <div>
            <t t-set="is_custom" t-value="false"/>

            <ul class="color_attribute_list d-flex gap-3 p-0">
                <li t-foreach="props.attribute.values()" t-as="value" t-key="value.id" class="color_attribute_list_item">
                    <t t-set="is_custom" t-value="is_custom || (value.is_custom and value.id == props.selected.id)"/>
                    <t t-set="img_style" t-value="value.image ? 'background:url(/web/image/product.template.attribute.value/' + value.id + '/image); background-size:cover;' : ''"/>
                    <t t-set="color_style" t-value="value.is_custom ? '' : 'background-color: ' + value.html_color" />
                    <span class="d-flex flex-row justify-content-center align-items-center">
                        <label t-attf-class="configurator_color rounded-circle border position-relative {{ value.id == props.selected.id ? 'active border-3' : 'border-3 border-secondary' }}"
                            t-att-class="{'ptav-not-available' : value.excluded}"
                            t-attf-style="{{ img_style or color_style }}" t-att-data-color="value.name">
                            <input 
                                type="radio"
                                t-att-checked="value.id === props.selected.id"
                                t-on-change="() => props.setSelected(value)"
                                t-att-name="value.attribute_id.id"
                                t-att-disabled="value.doHaveConflictWith(props.allSelectedValues)" 
                                t-attf-id="{{ value.attribute_id.id }}_{{ value.id }}"
                                class="m-2 opacity-0" 
                            />
                        </label>
                        <div t-if="value.price_extra" class="price-extra-cell d-inline-block ms-2" t-att-class="{'ptav-not-available' : value.excluded}">
                            <span class="price_extra px-2 py-1 rounded-pill text-bg-info">
                                <t t-esc="getFormatPriceExtra(value.price_extra)"/>
                            </span>
                        </div>
                    </span>
                </li>
            </ul>

            <input class="custom_value form-control form-control-lg mt-2" t-if="is_custom" type="text" t-att-value="props.customValue" t-on-change="(e) => props.setCustomValue(e.target.value)"/>
        </div>
    </t>

    <t t-name="point_of_sale.MultiProductAttribute">
        <div class="d-flex gap-2 flex-wrap">
            <div t-foreach="props.attribute.values()" t-as="value" t-key="value.id">
                <input
                    class="form-check-input d-none"
                    type="checkbox"
                    t-attf-id="multi-{{value.id}}"
                    t-attf-name="multi-{{value.id}}"
                    t-on-change="() => this.onChange(value)"
                    />
                <label
                    t-attf-class="form-check-label btn btn-secondary btn-lg lh-lg d-flex {{ this.state.is_value_selected[value.id] === true ? 'active' : '' }}"
                    t-attf-name="multi-{{value.id}}"
                    t-attf-for="multi-{{value.id}}">
                    <span t-att-class="{ 'text-muted': value.doHaveConflictWith(props.allSelectedValues) }" t-esc="value.name"/>
                    <div t-if="value.price_extra" class="price-extra-cell d-inline-block ms-2">
                        <span class="price_extra px-2 py-1 rounded-pill text-bg-info">
                            <t t-esc="getFormatPriceExtra(value.price_extra)"/>
                        </span>
                    </div>
                </label>
            </div>
        </div>
    </t>

    <t t-name="point_of_sale.ProductConfiguratorPopup">
        <Dialog title="title">
            <ProductInfoBanner t-if="showInfoBanner" productTemplate="props.productTemplate" product="this.product" />
            <div t-ref="input-area">
                <div t-if="isArchivedCombination()" class="alert alert-warning mt-3">
                    <span>This option or combination of options is not available</span>
                </div>
                <div t-foreach="this.attributes" t-as="attribute" t-key="attribute.id" class="attribute mb-3">
                    <div class="attribute_name mb-2 fw-bolder" t-esc="attribute.attribute_id.name"/>
                    <RadioProductAttribute t-if="attribute.attribute_id.display_type === 'radio'" attribute="attribute" 
                        selected="this.state.attributes[attribute.attribute_id.id].selected" setSelected="this.setSelected(attribute)" 
                        customValue="this.state.attributes[attribute.attribute_id.id].custom_value" setCustomValue="setCustomValue(attribute)"
                        allSelectedValues="this.selectedValues"/>
                    <PillsProductAttribute t-elif="attribute.attribute_id.display_type === 'pills'" attribute="attribute" 
                        selected="this.state.attributes[attribute.attribute_id.id].selected" setSelected="this.setSelected(attribute)" 
                        customValue="this.state.attributes[attribute.attribute_id.id].custom_value" setCustomValue="setCustomValue(attribute)"
                        allSelectedValues="this.selectedValues"/>
                    <SelectProductAttribute t-elif="attribute.attribute_id.display_type === 'select'" attribute="attribute" 
                        selected="this.state.attributes[attribute.attribute_id.id].selected" setSelected="this.setSelected(attribute)" 
                        customValue="this.state.attributes[attribute.attribute_id.id].custom_value" setCustomValue="setCustomValue(attribute)"
                        allSelectedValues="this.selectedValues"/>
                    <ColorProductAttribute t-elif="attribute.attribute_id.display_type === 'color'" attribute="attribute" 
                        selected="this.state.attributes[attribute.attribute_id.id].selected" setSelected="this.setSelected(attribute)" 
                        customValue="this.state.attributes[attribute.attribute_id.id].custom_value" setCustomValue="setCustomValue(attribute)"
                        allSelectedValues="this.selectedValues"/>
                    <MultiProductAttribute t-elif="attribute.attribute_id.display_type === 'multi'" attribute="attribute" 
                        selected="this.state.attributes[attribute.attribute_id.id].selected" setSelected="this.setSelected(attribute)" 
                        customValue="this.state.attributes[attribute.attribute_id.id].custom_value" setCustomValue="setCustomValue(attribute)"
                        allSelectedValues="this.selectedValues"/>
                </div>
            </div>
            <t t-set-slot="footer">
                <div class="d-flex flex-row gap-2 w-100">
                    <button
                            class="btn btn-primary btn-lg lh-lg w-50 o-default-button"
                            t-att-class="{'disabled': isArchivedCombination()}"
                            t-on-click="confirm">
                            Add
                        </button>
                    <button class="btn btn-secondary btn-lg lh-lg w-50 o-default-button" t-on-click="close">Discard</button>
                </div>
            </t>
        </Dialog>
    </t>
</templates>
