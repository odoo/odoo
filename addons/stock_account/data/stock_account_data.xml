<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">
        <record forcecreate="True" id="default_cost_method" model="ir.property">
            <field name="name">Cost Method Property</field>
            <field name="fields_id" ref="field_product_template_property_cost_method"/>
            <field name="value" eval="False" />
            <field name="type">selection</field>
        </record>
        <record forcecreate="True" id="default_valuation" model="ir.property">
            <field name="name">Valuation Property</field>
            <field name="fields_id" ref="field_product_template_property_valuation"/>
            <field name="value" eval="False" />
            <field name="type">selection</field>
        </record>

        <record forcecreate="True" id="default_category_cost_method" model="ir.property">
            <field name="name">Cost Method Property</field>
            <field name="fields_id" ref="field_product_category_property_cost_method"/>
            <field name="value">standard</field>
            <field name="type">selection</field>
        </record>
        <record forcecreate="True" id="default_category_valuation" model="ir.property">
            <field name="name">Valuation Property</field>
            <field name="fields_id" ref="field_product_category_property_valuation"/>
            <field name="value">manual_periodic</field>
            <field name="type">selection</field>
        </record>
        <record id="action_stock_account_valuation_report" model="ir.actions.server">
            <field name="name">Stock Valuation Report</field>
            <field name="type">ir.actions.server</field>
            <field name="state">code</field>
            <field name="model_id" ref="product.model_product_product"></field>
            <field name="binding_model_id" ref="product.model_product_product"></field>
            <field name="code">
# Call `_fifo_vacuum` on concerned moves
fifo_valued_products = env['product.product']
fifo_valued_products |= env['product.template'].search([('property_cost_method', '=', 'fifo')]).mapped('product_variant_ids')
fifo_valued_categories = env['product.category'].search([('property_cost_method', '=', 'fifo')])
fifo_valued_products |= env['product.product'].search([('categ_id', 'child_of', fifo_valued_categories.ids)])
moves_to_vacuum = env['stock.move']
Move = env['stock.move']
for product in fifo_valued_products:
    moves_to_vacuum |= Move.search([('product_id', '=', product.id), ('remaining_qty', '&lt;', 0)] + Move._get_all_base_domain())
moves_to_vacuum._fifo_vacuum()
action = env.ref('stock_account.product_valuation_action').read()[0]
            </field>
        </record>
    </data>
</odoo>

