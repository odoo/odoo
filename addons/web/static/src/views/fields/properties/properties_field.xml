<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">
    <t t-name="web.PropertiesField" owl="1">
        <div t-ref="properties" class="w-100">
            <div class="o_group w-100 d-flex flex-row flex-wrap mt-0">
                <div
                    t-foreach="propertiesList"
                    t-as="propertyConfiguration"
                    t-key="propertyConfiguration.name"
                    class="o_property_field d-flex flex-row justify-content-start"
                    t-att-property-name="propertyConfiguration.name"
                    t-attf-class="col-md-{{12 / props.columns}} col-sm-12">
                    <div class="o_td_label">
                        <label t-attf-class="o_field_property_label o_form_label {{state.movedPropertyName === propertyConfiguration.name ? 'o_property_field_highlight' : ''}} d-flex flex-row align-items-center">
                            <b
                                t-if="propertyConfiguration.string &amp;&amp; propertyConfiguration.string.length"
                                t-out="propertyConfiguration.string"
                                class="d-inline-block mw-100"/>
                            <i t-else="" class="o_field_property_empty_label">
                                New Property
                            </i>
                            <i
                                t-if="state.canChangeDefinition"
                                class="o_field_property_open_popover fa fa-pencil ms-2"
                                t-on-click="(event) => this.onPropertyEdit(event, propertyConfiguration.name)"/>
                        </label>
                    </div>
                    <div class="o_property_field_value align-top w-100">
                        <PropertyValue
                            readonly="props.readonly"
                            canChangeDefinition="state.canChangeDefinition"
                            type="propertyConfiguration.type"
                            string="propertyConfiguration.string"
                            value="propertyConfiguration.value"
                            selection="propertyConfiguration.selection"
                            tags="propertyConfiguration.tags"
                            comodel="propertyConfiguration.comodel || ''"
                            domain="propertyConfiguration.domain || '[]'"
                            context="context"
                            onChange.bind="(value) => this.onPropertyValueChange(propertyConfiguration.name, value)"
                            onTagsChange.bind="(newTags, newValue) => this.onTagsChange(propertyConfiguration.name, newTags, newValue)"
                        />
                    </div>
                </div>
                <div class="o_field_property_add">
                    <button
                        t-if="!props.readonly &amp;&amp; state.canChangeDefinition"
                        class="btn btn-light text-muted m-0"
                        t-on-click="onPropertyCreate">
                        <i class="fa fa-plus"/>
                        Add a Property
                    </button>
                </div>
            </div>
        </div>
    </t>
</templates>
