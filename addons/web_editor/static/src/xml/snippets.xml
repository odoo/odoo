<?xml version="1.0" encoding="utf-8"?>
<templates id="template" xml:space="preserve">
    <t t-name="web_editor.snippet_overlay">
        <div class="oe_overlay o_handlers_idle">
            <div class="o_handles">
                <!-- Visible overlay borders + allow to resize when not readonly -->
                <div class="o_handle o_column_handle o_side o_side_y n readonly"><span class="o_handle_indicator"/></div>
                <div class="o_handle o_column_handle o_side o_side_x e readonly"><span class="o_handle_indicator"/></div>
                <div class="o_handle o_column_handle o_side o_side_x w readonly"><span class="o_handle_indicator"/></div>
                <div class="o_handle o_column_handle o_side o_side_y s readonly"><span class="o_handle_indicator"/></div>

                <!-- Grid resize handles -->
                <div class="o_handle o_grid_handle o_side o_side_y n d-none"><span class="o_handle_indicator"/></div>
                <div class="o_handle o_grid_handle o_side o_side_x e d-none"><span class="o_handle_indicator"/></div>
                <div class="o_handle o_grid_handle o_side o_side_x w d-none"><span class="o_handle_indicator"/></div>
                <div class="o_handle o_grid_handle o_side o_side_y s d-none"><span class="o_handle_indicator"/></div>
                <div class="o_handle o_grid_handle o_corner_handle ne d-none"><span class="o_handle_indicator"/></div>
                <div class="o_handle o_grid_handle o_corner_handle nw d-none"><span class="o_handle_indicator"/></div>
                <div class="o_handle o_grid_handle o_corner_handle se d-none"><span class="o_handle_indicator"/></div>
                <div class="o_handle o_grid_handle o_corner_handle sw d-none"><span class="o_handle_indicator"/></div>

                <div class="o_overlay_options_wrap">
                    <!-- Overlay move specific section -->
                    <div class="o_overlay_move_options">
                        <!-- Button-like handle to drag and drop -->
                        <div class="o_front_back o_send_back d-none"/>
                        <div class="o_front_back o_bring_front d-none"/>
                        <div class="o_move_handle fa fa-arrows"/>
                    </div>
                    <div class="o_overlay_edit_options">
                        <button type="button" class="oe_snippet_remove o_we_bg_danger fa fa-trash"/>
                    </div>
                </div>
            </div>
        </div>
    </t>
    <t t-name="web_editor.customize_block_options_section">
        <we-customizeblock-options>
            <we-title>
                <span t-esc="name"/>
                <we-top-button-group>
                    <we-button class="fa fa-fw fa-clone oe_snippet_clone o_we_link o_we_hover_success"
                                title="Duplicate Container"
                                aria-label="Duplicate Container"/>
                    <we-button class="fa fa-fw fa-trash oe_snippet_remove o_we_link o_we_hover_danger"
                                title="Remove Block"
                                aria-label="Remove Block"/>
                </we-top-button-group>
            </we-title>
        </we-customizeblock-options>
    </t>
    <t t-name="web_editor.outdated_block_message">
        <we-alert class="d-flex flex-column p-3 pt-4 align-items-center text-center text-white">
            <we-title>This block is outdated.</we-title>
            <span>You might not be able to customize it anymore.</span>
            <we-button class="o_we_bg_brand_primary py-2 my-4 border-0" data-no-preview="true" data-replace-snippet="">REPLACE BY NEW VERSION</we-button>
            <span>You can still access the block options but it might be ineffective.</span>
            <we-button class="o_we_bg_brand_primary py-2 my-4 border-0" data-no-preview="true" data-discard-alert="">ACCESS OPTIONS ANYWAY</we-button>
        </we-alert>
    </t>

    <!-- options -->
    <div t-name="web_editor.ColorPalette" class="colorpicker" t-ref="el" t-on-click="this._onColorpickerClick">
        <div class="o_we_colorpicker_switch_panel d-flex justify-content-end px-2">
            <t t-set="first_button_name"><t t-if="props.withCombinations">Theme</t><t t-else="">Solid</t></t>
            <button type="button" tabindex="1" class="o_we_colorpicker_switch_pane_btn" t-attf-data-target="#{props.withCombinations ? 'color-combinations' : 'theme-colors'}"
                    t-att-title="first_button_name"
                    t-on-click="this._onSwitchPaneButtonClick">
                <span t-out="first_button_name"/>
            </button>
            <button type="button" tabindex="2" class="o_we_colorpicker_switch_pane_btn" data-target="custom-colors" title="Custom"
                    t-on-click="this._onSwitchPaneButtonClick">
                <span>Custom</span>
            </button>
            <button type="button" tabindex="3" class="o_we_colorpicker_switch_pane_btn" data-target="gradients" title="Gradient"
                    t-on-click="this._onSwitchPaneButtonClick">
                <span>Gradient</span>
            </button>
            <t t-if="props.resetButton">
                <t t-set="trash_title"><t t-if="props.withCombinations">None</t><t t-else="">Reset</t></t>
                <button type="button" class="fa fa-trash my-1 ms-5 py-0 o_we_color_btn o_colorpicker_reset o_we_hover_danger" t-att-title="trash_title" />
            </t>
        </div>
        <div class="o_colorpicker_sections pt-2 px-2 pb-3" data-color-tab="color-combinations">
            <!-- List all Presets -->
            <t t-foreach="[1, 2, 3, 4, 5]" t-as="number" t-key="number">
                <button type="button" class="o_we_color_btn o_we_color_combination_btn"
                        t-att-data-color="number" t-attf-title="Preset #{number}">
                    <t t-call="web_editor.color.combination.preview"/>
                </button>
            </t>
        </div>
        <div class="o_colorpicker_sections py-3 px-2" data-color-tab="theme-colors"/>
        <div class="o_colorpicker_sections py-3 px-2" data-color-tab="custom-colors">
            <div class="o_colorpicker_section_container"/>
            <t t-if="!this.props.excluded.includes('custom')">
                <Colorpicker
                    document="this.props.document"
                    defaultColor="this.state.customDefaultColor"
                    noTransparency="!!this.props.noTransparency"
                    selectedColor="this.state.customSelectedColor"
                    onColorSelect.bind="_onColorPickerSelect"
                    onColorPreview.bind="_onColorPickerPreview"
                    onInputEnter="props.onInputEnter"/>
            </t>
        </div>
        <div class="o_colorpicker_sections py-3 px-2" data-color-tab="gradients">
            <div class="o_colorpicker_section_container"/>
            <t t-if="state.showGradientPicker">
                <Colorpicker
                    document="this.props.document"
                    stopClickPropagation="true"
                    selectedColor="this.state.gradientSelectedColor"
                    onColorSelect.bind="_onColorPickerSelectGradient"
                    onColorPreview.bind="_onColorPickerPreviewGradient"
                    onInputEnter="props.onInputEnter"/>
            </t>
        </div>
    </div>
    <t t-name="web_editor.color.combination.preview">
        <div class="o_we_cc_preview_wrapper d-flex justify-content-between">
            <h1 class="o_we_color_combination_btn_title">Title</h1>
            <p class="o_we_color_combination_btn_text flex-grow-1">Text</p>
            <span class="o_we_color_combination_btn_btn btn btn-sm btn-primary o_btn_preview me-1"><small>Button</small></span>
            <span class="o_we_color_combination_btn_btn btn btn-sm btn-secondary o_btn_preview"><small>Button</small></span>
        </div>
    </t>
    <t t-name="web_editor.color.combination.preview.legacy">
        <div class="o_we_cc_preview_wrapper d-flex justify-content-between">
            <h1 class="o_we_color_combination_btn_title">Title</h1>
            <p class="o_we_color_combination_btn_text flex-grow-1">Text</p>
            <span class="o_we_color_combination_btn_btn btn btn-sm btn-primary o_btn_preview me-1"><small>Button</small></span>
            <span class="o_we_color_combination_btn_btn btn btn-sm btn-secondary o_btn_preview"><small>Button</small></span>
        </div>
    </t>
    
    <t t-name="web_editor.SnippetsMenu">
        <div id="oe_snippets" t-ref="snippets-menu" t-on-mousedown="_onMouseDown">
            <div class="o_we_website_top_actions">
                <div class="o_we_external_history_buttons d-flex">
                    <button type="button" t-on-click="_onUndo" class="btn btn-secondary fa fa-undo" t-att-disabled="!state.canUndo"/>
                    <button type="button" t-on-click="_onRedo" class="btn btn-secondary fa fa-repeat" t-att-disabled="!state.canRedo"/>
                </div>
                <form class="ms-auto d-flex">
                    <button type="button" t-on-click="_onDiscardClick" class="btn btn-secondary" data-action="cancel" title="Tip: Esc to preview" accesskey="j">Discard</button>
                    <button type="button" t-on-click="_onSaveRequest" class="btn btn-primary" data-action="save" accesskey="s">Save</button>
                </form>
            </div>
            <div id="snippets_menu">
                <button type="button" tabindex="1" t-on-click="_onBlocksTabClick" t-att-class="{ 'active': state.currentTab === constructor.tabs.BLOCKS }" class="o_we_add_snippet_btn text-uppercase" accesskey="1">
                    <span>Blocks</span>
                </button>
                <button type="button" tabindex="2" t-on-click="_onOptionsTabClick" t-att-class="{ 'active': state.currentTab === constructor.tabs.OPTIONS }" class="o_we_customize_snippet_btn text-uppercase">
                    <span>Customize</span>
                </button>
            </div>

            <div class="o_snippet_search_filter" t-att-class="{ 'd-none': state.currentTab !== constructor.tabs.BLOCKS }">
                <input type="text" class="o_snippet_search_filter_input" t-model="state.search" placeholder="Search for a block (e.g. numbers, image wall, ...)"/>
                <i role="button" class="fa fa-times o_snippet_search_filter_reset" t-att-class="{ 'd-none': state.search === ''}" t-on-click="() => state.search = ''"/>
            </div>

            <div id="o_scroll" t-ref="snippets-area" t-att-class="{ 'd-none': state.currentTab !== constructor.tabs.BLOCKS }">
                <t t-foreach="getSnippetsByCategories()" t-as="category" t-key="category.id">
                    <div t-att-id="category.id" t-if="category_value.length > 0" class="o_panel">
                        <div class="o_panel_header">
                            <span t-esc="category.text"/>
                        </div>
                        <div t-att-id="category.id === 'snippet_custom' ? 'snippet_custom_body' : ''" class="o_panel_body" t-on-pointerup="_onMouseUp">
                            <t t-foreach="category_value" t-as="snippet" t-key="snippet.id">
                                <div t-if="snippet.visible"
                                    class="oe_snippet"
                                    t-att-class="{ 'o_disabled': snippet.disabled, 'o_snippet_install': snippet.installable, 'o_we_draggable': !snippet.renaming and !snippet.installable and !snippet.disabled }"
                                    t-att-name="snippet.displayName"
                                    t-att-data-oe-snippet-id="snippet.id"
                                    t-att-data-module-id="snippet.moduleId"
                                    t-on-click="_onSnippetClick"
                                    data-tooltip="This block cannot be dropped anywhere on this page.">
                                    <t t-if="snippet.disabled">
                                        <img src="/web_editor/static/src/img/snippet_disabled.svg" class="o_snippet_undroppable"/>
                                    </t>
                                    <div class="oe_snippet_thumbnail" t-att-class="{ 'o_we_already_dragging': snippet.renaming }" t-att-data-snippet="snippet.baseBody.dataset.snippet">
                                        <div class="oe_snippet_thumbnail_img" t-attf-style="background-image: url({{snippet.thumbnailSrc}});"/>
                                        <t t-if="snippet.isCustom and snippet.renaming">
                                            <we-input class="o_we_user_value_widget w-100 mx-1">
                                                <div>
                                                    <input type="text" autocomplete="chrome-off" t-att-value="snippet.displayName" class="text-start"/>
                                                    <we-button class="o_we_confirm_btn o_we_text_success fa fa-check" data-tooltip="Confirm" t-on-click="_onConfirmRename"></we-button>
                                                    <we-button class="o_we_cancel_btn o_we_text_danger fa fa-times" data-tooltip="Cancel" t-on-click="() => snippet.renaming = false"></we-button>
                                                </div>
                                            </we-input>
                                        </t>
                                        <t t-else="">
                                            <span class="oe_snippet_thumbnail_title"><t t-out="snippet.displayName"/></span>
                                        </t>
                                        <t t-if="snippet.installable">
                                            <button class="btn btn-primary o_install_btn w-100" t-on-click="_onInstallBtnClick">Install</button>
                                        </t>
                                    </div>
                                    <t t-if="snippet.isCustom and !snippet.renaming">
                                        <!-- t-on-pointerup with empty handle to prevent pointerup from menu -->
                                        <we-button class="o_rename_btn fa fa-pencil btn o_we_hover_success" t-att-data-tooltip="snippet.renameTitle" t-att-data-snippet-id="snippet.id"
                                            t-on-click.stop="_onRenameBtnClick"
                                            t-on-pointerup.stop=""/>
                                        <we-button class="o_delete_btn fa fa-trash btn o_we_hover_danger" t-att-data-tooltip="snippet.deleteTitle" t-att-data-snippet-id="snippet.id"
                                            t-on-click.stop="_onDeleteBtnClick"
                                            t-on-pointerup.stop=""/>
                                    </t>
                                </div>
                            </t>
                        </div>
                    </div>
                </t>
            </div>
            <div class="o_we_customize_panel" t-ref="customize-panel" t-att-class="{ 'd-none': state.currentTab === constructor.tabs.BLOCKS }">
                <we-customizeblock-options id="o_we_editor_toolbar_container" t-att-class="{ 'd-none': !state.showToolbar }">
                    <we-title>
                        <span t-out="state.toolbarTitle"/>
                        <div id="removeFormat" data-call="removeFormat" title="Remove format" class="btn fa fa-eraser fa-fw"></div>
                    </we-title>
                    <div class="o_we_toolbar_wrapper" t-ref="toolbar-wrapper" style="display: contents;">
                        <Toolbar t-props="options.wysiwyg.state.toolbarProps">
                            <t t-if="options.wysiwyg.state.linkToolProps">
                                <LinkTools t-props="options.wysiwyg.state.linkToolProps"/>
                            </t>
                        </Toolbar>
                    </div>
                </we-customizeblock-options>
                <t t-call="web_editor.toolbar.table-options"/>
            </div>
            <div t-if="state.invisibleElements.length" class="o_we_invisible_el_panel">
                <div class="o_panel_header">
                    Invisible Elements
                </div>
                <t t-foreach="state.invisibleElements" t-as="invisibleEntry" t-key="invisibleEntry_index">
                    <t t-call="web_editor.invisibleSnippetEntry" t-call-context="{'entry': invisibleEntry, 'menu': this}"/>
                </t>
            </div>
        </div>
    </t>

    <t t-name="web_editor.invisibleSnippetEntry">
        <div class="o_we_invisible_entry d-flex align-items-center justify-content-between"
            t-att-class="{'o_we_invisible_root_parent': entry.isRootParent, 'o_we_sublevel_1': entry.isDescendant}"
            t-on-click="() => menu.onInvisibleEntryClick(entry)">
            <we-title t-out="entry.name"/>
            <i class="fa ms-2" t-att-class="entry.isVisible ? 'fa-eye' : 'fa-eye-slash'"></i>
        </div>
        <ul t-if="entry.children.length > 0">
            <t t-foreach="entry.children" t-as="child" t-key="child_index">
                <li>
                    <t t-call="web_editor.invisibleSnippetEntry" t-call-context="{'entry': child, menu}"/>
                </li>
            </t>
        </ul>
    </t>

</templates>
