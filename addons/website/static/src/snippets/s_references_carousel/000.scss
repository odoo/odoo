.s_references_carousel {
    .s_references_carousel_slider {
        --duration: 5s;
        height: var(--height);
        overflow: hidden;
        mask-image: linear-gradient(to right, transparent, #000 10% 90%, transparent);
    }

    .s_references_carousel_list {
        min-width: calc(var(--width) * var(--quantity));
        position: relative;
        height: 100%;
    }

    .s_references_carousel_item {
        width: var(--width);
        height: var(--height);
        position: absolute;
        left: 100%;
        animation: autoRun var(--duration) linear infinite;
        animation-delay: calc((var(--duration) / var(--quantity)) * (var(--position) - 1) - var(--duration));

        @keyframes autoRun {
            from {
                left: 100%;
            }
            to {
                left: calc(var(--width) * -1);
            }
        }

        img {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }
    }
}

// Style the references carousel when it's selected in the editor
body.editor_enable .s_references_carousel.snippet-selected {
    .s_references_carousel_item {
        animation-play-state: paused;
        // Position items properly when animation is paused to prevent overlapping
        // Calculate left position based on item position and width
        left: calc((var(--position) - 1) * var(--width));
        position: relative;
        left: unset !important;
    }

    .s_references_carousel_list {
        display: flex;
        flex-wrap: wrap;
        min-width: unset;
    }

    .s_references_carousel_slider {
        height: unset;
    }
}
