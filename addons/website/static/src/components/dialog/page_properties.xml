<?xml version="1.0" encoding="UTF-8"?>
<templates>

<t t-name="website.DuplicatePageDialog">
    <WebsiteDialog close="props.close" primaryClick="() => this.duplicate()">
        <div class="mb-3 row">
            <label class="col-form-label col-md-3">
                Page Name
            </label>
            <div class="col-md-9">
                <input type="text" t-model="state.name" class="form-control" required="required" t-ref="autofocus"/>
            </div>
        </div>
    </WebsiteDialog>
</t>

<t t-name="website.PageDependencies">
    <t t-if="!!Object.keys(state.dependencies).length">
        <t t-if="props.mode === 'popover'">
            <t t-set="depTemplate">
                <t t-call="{{ constructor.popoverTemplate }}"/>
            </t>
            <div t-att-data-bs-template="depTemplate" data-bs-html="true" title="Dependencies" t-ref="action">
                Could be used in many places, see here: <a href="#" t-on-click="showDependencies">Dependencies</a>
            </div>
        </t>
        <t t-else="">
            <p class="text-warning">We found these links:</p>
            <div t-foreach="state.dependencies" t-as="dependency" t-key="dependency" class="ml16 mb16">
                <a class="collapsed" data-bs-toggle="collapse"
                t-attf-aria-controls="collapseDependencies{{ dependency_index }}"
                t-attf-href="#collapseDependencies{{ dependency_index }}"
                aria-expanded="false">
                    <i class="fa fa-caret-right me-1"/>
                    <t t-esc="dependency"/>:
                    <span class="text-muted"> <t t-esc="dependency_value.length"/> found(s)</span>
                </a>
                <div t-attf-id="collapseDependencies{{ dependency_index }}" class="collapse" aria-expanded="false">
                    <ul>
                        <li t-foreach="dependency_value" t-as="item" t-key="item_index">
                            <t t-set="link_text">This URL is contained in the “%(field)s” of the following “%(model)s”</t>
                            <a t-att-href="item.link" target="_blank">
                                <t t-out="sprintf(link_text, { field: item.field_name, model: item.model_name })"/>: <b t-out="item.record_name"/>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </t>
    </t>
</t>

<t t-name="website.PageDependencies.Tooltip">
    <t t-foreach="dependencies" t-as="dependency" t-key="dependency">
        <b><t t-esc="dependency"/></b>
        <ul>
            <li t-foreach="dependency_value" t-as="item" t-key="item_index">
                <a t-att-href="item.link" t-att-title="item.record_name" class="o_text_overflow" target="_blank">
                    <t t-out="item.record_name"/>
                </a>
            </li>
        </ul>
    </t>
</t>

<t t-name="website.DeletePageDialog">
    <WebsiteDialog title.translate="Delete Page" close="props.close">
        <p t-if="props.resIds.length > 1">Ready to make those web pages disappear into thin air? Are you sure?\n It will be gone forever!\n
            <p class="text-warning">But before deleting them, make sure you update all links referring to them. That way, your customers won't bump into the not-so-famous 404 error page.</p>
        </p>
        <p t-else="">Ready to make this web page disappear into thin air? Are you sure?\n It will be gone forever!\n
            <p class="text-warning">But before deleting it, make sure you update all links referring to it. That way, your customers won't bump into the not-so-famous 404 error page.</p>
        </p>
        <PageDependencies resIds="props.resIds" resModel="props.resModel" mode="'collapse'"/>
        <CheckBox value="state.confirm" onChange.bind="onConfirmCheckboxChange">
            <p class="text-warning">I am sure about this.</p>
        </CheckBox>

        <t t-set-slot="footer">
            <button class="btn btn-primary" t-on-click="() => this.onClickDelete()"  t-att-disabled="!this.state.confirm">
                Delete
            </button>
            <button class="btn btn-secondary" t-on-click="() => this.props.close()">
                No, keep it
            </button>
        </t>
    </WebsiteDialog>
</t>

<t t-name="website.PagePropertiesDialogButtons" t-inherit="web.FormViewDialog.ToOne.buttons">
    <xpath expr="//button[contains(@class, 'o_form_button_cancel')]" position="after">
        <button class="btn btn-link order-last ms-auto" t-on-click="props.clonePage"><i class="fa fa-fw fa-clone"/>Duplicate Page</button>
        <button class="btn btn-link order-last" t-on-click="props.deletePage"><i class="fa fa-fw fa-trash"/>Delete Page</button>
    </xpath>
</t>

</templates>
