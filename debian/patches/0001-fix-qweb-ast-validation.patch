diff --git odoo/addons/base/models/ir_qweb.py odoo/addons/base/models/ir_qweb.py
index 5c45c91060f4d..03da38fb72042 100644
--- odoo/addons/base/models/ir_qweb.py
+++ odoo/addons/base/models/ir_qweb.py
@@ -426,10 +426,10 @@ def _compile_expr(self, expr):
     def _get_attr_bool(self, attr, default=False):
         if attr:
             if attr is True:
-                return ast.Name(id='True', ctx=ast.Load())
+                return ast.Constant(True)
             attr = attr.lower()
             if attr in ('false', '0'):
-                return ast.Name(id='False', ctx=ast.Load())
+                return ast.Constant(False)
             elif attr in ('true', '1'):
-                return ast.Name(id='True', ctx=ast.Load())
-        return ast.Name(id=str(attr if attr is False else default), ctx=ast.Load())
+                return ast.Constant(True)
+        return ast.Constant(attr if attr is False else default)
diff --git a/odoo/addons/base/models/qweb.py b/odoo/addons/base/models/qweb.py
index 771ffc1f9326a..a4347b8d1a586 100644
--- odoo/addons/base/models/qweb.py
+++ odoo/addons/base/models/qweb.py
@@ -600,12 +600,12 @@ def _if_content_is_not_Falsy(self, body, orelse):
                         ast.Compare(
                             left=ast.Name(id='content', ctx=ast.Load()),
                             ops=[ast.IsNot()],
-                            comparators=[ast.Name(id='None', ctx=ast.Load())]
+                            comparators=[ast.Constant(None)]
                         ),
                         ast.Compare(
                             left=ast.Name(id='content', ctx=ast.Load()),
                             ops=[ast.IsNot()],
-                            comparators=[ast.Name(id='False', ctx=ast.Load())]
+                            comparators=[ast.Constant(False)]
                         )
                     ]
                 ),
@@ -1233,7 +1233,7 @@ def _compile_widget(self, el, expression, field_options):
                         keywords=[], starargs=None, kwargs=None
                     ),
                     self._compile_expr0(expression),
-                    ast.Name(id='None', ctx=ast.Load()),
+                    ast.Constant(None),
                 ], ctx=ast.Load())
             )
         ]
@@ -1550,7 +1550,7 @@ def _compile_directive_call(self, el, options):
                     if isinstance(key, str):
                         keys.append(ast.Str(s=key))
                     elif key is None:
-                        keys.append(ast.Name(id='None', ctx=ast.Load()))
+                        keys.append(ast.Constant(None))
                     values.append(ast.Str(s=value))
 
                 # {'nsmap': {None: 'xmlns def'}}
