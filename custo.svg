<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="566" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="549.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="549.00"> </text><svg id="frames" x="10" width="1180"><g><title>_browse (odoo/models.py:4953) (91 samples, 1.34%)</title><rect x="6.2693%" y="468" width="1.3361%" height="15" fill="rgb(227,0,7)"/><text x="6.5193%" y="478.50"></text></g><g><title>__get__ (odoo/fields.py:1062) (340 samples, 4.99%)</title><rect x="3.8467%" y="436" width="4.9919%" height="15" fill="rgb(217,0,24)"/><text x="4.0967%" y="446.50">__get_..</text></g><g><title>convert_to_record (odoo/fields.py:2672) (308 samples, 4.52%)</title><rect x="4.3165%" y="452" width="4.5221%" height="15" fill="rgb(221,193,54)"/><text x="4.5665%" y="462.50">conve..</text></g><g><title>__get__ (odoo/fields.py:2485) (576 samples, 8.46%)</title><rect x="3.2741%" y="420" width="8.4569%" height="15" fill="rgb(248,212,6)"/><text x="3.5241%" y="430.50">__get__ (odo..</text></g><g><title>__get__ (odoo/fields.py:972) (70 samples, 1.03%)</title><rect x="10.7033%" y="436" width="1.0277%" height="15" fill="rgb(208,68,35)"/><text x="10.9533%" y="446.50"></text></g><g><title>_get_aml_line (account_reports/models/account_general_ledger.py:759) (692 samples, 10.16%)</title><rect x="1.8940%" y="404" width="10.1600%" height="15" fill="rgb(232,128,0)"/><text x="2.1440%" y="414.50">_get_aml_line (..</text></g><g><title>get_lang (odoo/tools/misc.py:1244) (167 samples, 2.45%)</title><rect x="12.6854%" y="436" width="2.4519%" height="15" fill="rgb(207,160,47)"/><text x="12.9354%" y="446.50">ge..</text></g><g><title>get_installed (&lt;decorator-gen-93&gt;:2) (94 samples, 1.38%)</title><rect x="13.7572%" y="452" width="1.3801%" height="15" fill="rgb(228,23,34)"/><text x="14.0072%" y="462.50"></text></g><g><title>_lang_get_id (&lt;decorator-gen-87&gt;:2) (69 samples, 1.01%)</title><rect x="16.1063%" y="468" width="1.0131%" height="15" fill="rgb(218,30,26)"/><text x="16.3563%" y="478.50"></text></g><g><title>format_date (odoo/tools/misc.py:1320) (353 samples, 5.18%)</title><rect x="12.5679%" y="420" width="5.1828%" height="15" fill="rgb(220,122,19)"/><text x="12.8179%" y="430.50">format..</text></g><g><title>get_lang (odoo/tools/misc.py:1252) (158 samples, 2.32%)</title><rect x="15.4309%" y="436" width="2.3198%" height="15" fill="rgb(250,228,42)"/><text x="15.6809%" y="446.50">g..</text></g><g><title>_lang_get (odoo/addons/base/models/res_lang.py:210) (120 samples, 1.76%)</title><rect x="15.9888%" y="452" width="1.7619%" height="15" fill="rgb(240,193,28)"/><text x="16.2388%" y="462.50"></text></g><g><title>exists (genericpath.py:19) (97 samples, 1.42%)</title><rect x="22.1113%" y="516" width="1.4242%" height="15" fill="rgb(216,20,37)"/><text x="22.3613%" y="526.50"></text></g><g><title>exists (babel/localedata.py:53) (180 samples, 2.64%)</title><rect x="21.7442%" y="500" width="2.6428%" height="15" fill="rgb(206,188,39)"/><text x="21.9942%" y="510.50">ex..</text></g><g><title>__init__ (babel/core.py:167) (197 samples, 2.89%)</title><rect x="21.5093%" y="484" width="2.8924%" height="15" fill="rgb(217,207,13)"/><text x="21.7593%" y="494.50">__..</text></g><g><title>parse (babel/core.py:288) (259 samples, 3.80%)</title><rect x="20.6284%" y="452" width="3.8027%" height="15" fill="rgb(231,73,38)"/><text x="20.8784%" y="462.50">pars..</text></g><g><title>_try_load (babel/core.py:273) (254 samples, 3.73%)</title><rect x="20.7018%" y="468" width="3.7293%" height="15" fill="rgb(225,20,46)"/><text x="20.9518%" y="478.50">_try..</text></g><g><title>format_date (odoo/tools/misc.py:1321) (458 samples, 6.72%)</title><rect x="17.7507%" y="420" width="6.7244%" height="15" fill="rgb(210,31,41)"/><text x="18.0007%" y="430.50">format_da..</text></g><g><title>babel_locale_parse (odoo/tools/misc.py:1256) (383 samples, 5.62%)</title><rect x="18.8519%" y="436" width="5.6233%" height="15" fill="rgb(221,200,47)"/><text x="19.1019%" y="446.50">babel_l..</text></g><g><title>format_date (odoo/tools/misc.py:1323) (144 samples, 2.11%)</title><rect x="24.4898%" y="420" width="2.1142%" height="15" fill="rgb(226,26,5)"/><text x="24.7398%" y="430.50">f..</text></g><g><title>_get_aml_line (account_reports/models/account_general_ledger.py:765) (1,187 samples, 17.43%)</title><rect x="12.0540%" y="404" width="17.4277%" height="15" fill="rgb(249,33,26)"/><text x="12.3040%" y="414.50">_get_aml_line (account_repo..</text></g><g><title>format_date (odoo/tools/misc.py:1325) (196 samples, 2.88%)</title><rect x="26.6040%" y="420" width="2.8777%" height="15" fill="rgb(235,183,28)"/><text x="26.8540%" y="430.50">fo..</text></g><g><title>format_date (babel/dates.py:700) (144 samples, 2.11%)</title><rect x="27.3675%" y="436" width="2.1142%" height="15" fill="rgb(221,5,38)"/><text x="27.6175%" y="446.50">f..</text></g><g><title>apply (babel/dates.py:1232) (142 samples, 2.08%)</title><rect x="27.3969%" y="452" width="2.0849%" height="15" fill="rgb(247,18,42)"/><text x="27.6469%" y="462.50">a..</text></g><g><title>__mod__ (babel/dates.py:1229) (94 samples, 1.38%)</title><rect x="28.1016%" y="468" width="1.3801%" height="15" fill="rgb(241,131,45)"/><text x="28.3516%" y="478.50"></text></g><g><title>__get__ (odoo/fields.py:1062) (87 samples, 1.28%)</title><rect x="31.4638%" y="452" width="1.2773%" height="15" fill="rgb(249,31,29)"/><text x="31.7138%" y="462.50"></text></g><g><title>format_value (account_reports/models/account_report.py:1360) (257 samples, 3.77%)</title><rect x="30.3186%" y="420" width="3.7733%" height="15" fill="rgb(225,111,53)"/><text x="30.5686%" y="430.50">form..</text></g><g><title>__get__ (odoo/fields.py:2485) (193 samples, 2.83%)</title><rect x="31.2583%" y="436" width="2.8337%" height="15" fill="rgb(238,160,17)"/><text x="31.5083%" y="446.50">__..</text></g><g><title>format_value (account_reports/models/account_report.py:1361) (152 samples, 2.23%)</title><rect x="34.0919%" y="420" width="2.2317%" height="15" fill="rgb(214,148,48)"/><text x="34.3419%" y="430.50">f..</text></g><g><title>is_zero (odoo/addons/base/models/res_currency.py:172) (127 samples, 1.86%)</title><rect x="34.4590%" y="436" width="1.8646%" height="15" fill="rgb(232,36,49)"/><text x="34.7090%" y="446.50">i..</text></g><g><title>_get_aml_line (account_reports/models/account_general_ledger.py:768) (452 samples, 6.64%)</title><rect x="30.0396%" y="404" width="6.6363%" height="15" fill="rgb(209,103,24)"/><text x="30.2896%" y="414.50">_get_aml_..</text></g><g><title>__get__ (odoo/fields.py:1062) (74 samples, 1.09%)</title><rect x="37.5716%" y="452" width="1.0865%" height="15" fill="rgb(229,88,8)"/><text x="37.8216%" y="462.50"></text></g><g><title>format_value (account_reports/models/account_report.py:1360) (212 samples, 3.11%)</title><rect x="36.9549%" y="420" width="3.1126%" height="15" fill="rgb(213,181,19)"/><text x="37.2049%" y="430.50">for..</text></g><g><title>__get__ (odoo/fields.py:2485) (185 samples, 2.72%)</title><rect x="37.3513%" y="436" width="2.7162%" height="15" fill="rgb(254,191,54)"/><text x="37.6013%" y="446.50">__..</text></g><g><title>format_value (account_reports/models/account_report.py:1361) (120 samples, 1.76%)</title><rect x="40.0675%" y="420" width="1.7619%" height="15" fill="rgb(241,83,37)"/><text x="40.3175%" y="430.50"></text></g><g><title>is_zero (odoo/addons/base/models/res_currency.py:172) (105 samples, 1.54%)</title><rect x="40.2878%" y="436" width="1.5416%" height="15" fill="rgb(233,36,39)"/><text x="40.5378%" y="446.50"></text></g><g><title>_get_aml_line (account_reports/models/account_general_ledger.py:769) (361 samples, 5.30%)</title><rect x="36.6760%" y="404" width="5.3002%" height="15" fill="rgb(226,3,54)"/><text x="36.9260%" y="414.50">_get_a..</text></g><g><title>__get__ (odoo/fields.py:1062) (79 samples, 1.16%)</title><rect x="42.8718%" y="452" width="1.1599%" height="15" fill="rgb(245,192,40)"/><text x="43.1218%" y="462.50"></text></g><g><title>convert_to_record (odoo/fields.py:2672) (71 samples, 1.04%)</title><rect x="42.9893%" y="468" width="1.0424%" height="15" fill="rgb(238,167,29)"/><text x="43.2393%" y="478.50"></text></g><g><title>format_value (account_reports/models/account_report.py:1360) (217 samples, 3.19%)</title><rect x="42.2258%" y="420" width="3.1860%" height="15" fill="rgb(232,182,51)"/><text x="42.4758%" y="430.50">for..</text></g><g><title>__get__ (odoo/fields.py:2485) (179 samples, 2.63%)</title><rect x="42.7837%" y="436" width="2.6281%" height="15" fill="rgb(231,60,39)"/><text x="43.0337%" y="446.50">__..</text></g><g><title>format_value (account_reports/models/account_report.py:1361) (129 samples, 1.89%)</title><rect x="45.4118%" y="420" width="1.8940%" height="15" fill="rgb(208,69,12)"/><text x="45.6618%" y="430.50">f..</text></g><g><title>is_zero (odoo/addons/base/models/res_currency.py:172) (116 samples, 1.70%)</title><rect x="45.6027%" y="436" width="1.7031%" height="15" fill="rgb(235,93,37)"/><text x="45.8527%" y="446.50"></text></g><g><title>_get_aml_line (account_reports/models/account_general_ledger.py:770) (373 samples, 5.48%)</title><rect x="41.9762%" y="404" width="5.4764%" height="15" fill="rgb(213,116,39)"/><text x="42.2262%" y="414.50">_get_am..</text></g><g><title>_has_group (&lt;decorator-gen-103&gt;:2) (156 samples, 2.29%)</title><rect x="50.2129%" y="452" width="2.2904%" height="15" fill="rgb(222,207,29)"/><text x="50.4629%" y="462.50">_..</text></g><g><title>user_has_groups (odoo/models.py:1393) (282 samples, 4.14%)</title><rect x="49.0090%" y="420" width="4.1404%" height="15" fill="rgb(206,96,30)"/><text x="49.2590%" y="430.50">user_..</text></g><g><title>has_group (odoo/addons/base/models/res_users.py:811) (233 samples, 3.42%)</title><rect x="49.7284%" y="436" width="3.4209%" height="15" fill="rgb(218,138,4)"/><text x="49.9784%" y="446.50">has..</text></g><g><title>_get_aml_line (account_reports/models/account_general_ledger.py:772) (390 samples, 5.73%)</title><rect x="47.4527%" y="404" width="5.7260%" height="15" fill="rgb(250,191,14)"/><text x="47.7027%" y="414.50">_get_am..</text></g><g><title>_get_general_ledger_lines (account_reports/models/account_general_ledger.py:136) (3,691 samples, 54.19%)</title><rect x="1.4682%" y="388" width="54.1917%" height="15" fill="rgb(239,60,40)"/><text x="1.7182%" y="398.50">_get_general_ledger_lines (account_reports/models/account_general_ledger.py:136)</text></g><g><title>round (odoo/addons/base/models/res_currency.py:134) (134 samples, 1.97%)</title><rect x="53.6926%" y="404" width="1.9674%" height="15" fill="rgb(206,27,48)"/><text x="53.9426%" y="414.50">r..</text></g><g><title>&lt;listcomp&gt; (odoo/sql_db.py:269) (81 samples, 1.19%)</title><rect x="56.7318%" y="436" width="1.1893%" height="15" fill="rgb(225,35,8)"/><text x="56.9818%" y="446.50"></text></g><g><title>__build_dict (odoo/sql_db.py:262) (71 samples, 1.04%)</title><rect x="56.8786%" y="452" width="1.0424%" height="15" fill="rgb(250,213,24)"/><text x="57.1286%" y="462.50"></text></g><g><title>_do_query (account_reports/models/account_general_ledger.py:645) (131 samples, 1.92%)</title><rect x="56.1592%" y="404" width="1.9234%" height="15" fill="rgb(247,123,22)"/><text x="56.4092%" y="414.50">_..</text></g><g><title>dictfetchall (odoo/sql_db.py:269) (131 samples, 1.92%)</title><rect x="56.1592%" y="420" width="1.9234%" height="15" fill="rgb(231,138,38)"/><text x="56.4092%" y="430.50">d..</text></g><g><title>get_xlsx (account_reports/models/account_report.py:1523) (3,902 samples, 57.29%)</title><rect x="1.0277%" y="340" width="57.2897%" height="15" fill="rgb(231,145,46)"/><text x="1.2777%" y="350.50">get_xlsx (account_reports/models/account_report.py:1523)</text></g><g><title>_get_table (account_reports/models/account_report.py:802) (3,902 samples, 57.29%)</title><rect x="1.0277%" y="356" width="57.2897%" height="15" fill="rgb(251,118,11)"/><text x="1.2777%" y="366.50">_get_table (account_reports/models/account_report.py:802)</text></g><g><title>_get_lines (account_reports/models/account_general_ledger.py:66) (3,902 samples, 57.29%)</title><rect x="1.0277%" y="372" width="57.2897%" height="15" fill="rgb(217,147,25)"/><text x="1.2777%" y="382.50">_get_lines (account_reports/models/account_general_ledger.py:66)</text></g><g><title>_get_general_ledger_lines (account_reports/models/account_general_ledger.py:82) (169 samples, 2.48%)</title><rect x="55.8361%" y="388" width="2.4813%" height="15" fill="rgb(247,81,37)"/><text x="56.0861%" y="398.50">_g..</text></g><g><title>get_xlsx (account_reports/models/account_report.py:1571) (101 samples, 1.48%)</title><rect x="58.5964%" y="340" width="1.4829%" height="15" fill="rgb(209,12,38)"/><text x="58.8464%" y="350.50"></text></g><g><title>cell_wrapper (xlsxwriter/worksheet.py:67) (86 samples, 1.26%)</title><rect x="58.8166%" y="356" width="1.2627%" height="15" fill="rgb(227,1,9)"/><text x="59.0666%" y="366.50"></text></g><g><title>write (xlsxwriter/worksheet.py:408) (84 samples, 1.23%)</title><rect x="58.8460%" y="372" width="1.2333%" height="15" fill="rgb(248,47,43)"/><text x="59.0960%" y="382.50"></text></g><g><title>_write (xlsxwriter/worksheet.py:433) (71 samples, 1.04%)</title><rect x="59.0369%" y="388" width="1.0424%" height="15" fill="rgb(221,10,30)"/><text x="59.2869%" y="398.50"></text></g><g><title>_lang_get_id (&lt;decorator-gen-87&gt;:2) (104 samples, 1.53%)</title><rect x="65.7172%" y="388" width="1.5269%" height="15" fill="rgb(210,229,1)"/><text x="65.9672%" y="398.50"></text></g><g><title>_get_cell_type_value (account_reports/models/account_report.py:1597) (431 samples, 6.33%)</title><rect x="61.4741%" y="356" width="6.3280%" height="15" fill="rgb(222,148,37)"/><text x="61.7241%" y="366.50">_get_cel..</text></g><g><title>_lang_get (odoo/addons/base/models/res_lang.py:210) (153 samples, 2.25%)</title><rect x="65.5557%" y="372" width="2.2464%" height="15" fill="rgb(234,67,33)"/><text x="65.8057%" y="382.50">_..</text></g><g><title>_parse_localename (locale.py:481) (128 samples, 1.88%)</title><rect x="72.6766%" y="436" width="1.8793%" height="15" fill="rgb(247,98,35)"/><text x="72.9266%" y="446.50">_..</text></g><g><title>normalize (locale.py:449) (81 samples, 1.19%)</title><rect x="73.3666%" y="452" width="1.1893%" height="15" fill="rgb(247,138,52)"/><text x="73.6166%" y="462.50"></text></g><g><title>_strptime (_strptime.py:331) (166 samples, 2.44%)</title><rect x="72.3242%" y="388" width="2.4372%" height="15" fill="rgb(213,79,30)"/><text x="72.5742%" y="398.50">_s..</text></g><g><title>_getlang (_strptime.py:28) (161 samples, 2.36%)</title><rect x="72.3976%" y="404" width="2.3638%" height="15" fill="rgb(246,177,23)"/><text x="72.6476%" y="414.50">_g..</text></g><g><title>getlocale (locale.py:591) (145 samples, 2.13%)</title><rect x="72.6325%" y="420" width="2.1289%" height="15" fill="rgb(230,62,27)"/><text x="72.8825%" y="430.50">g..</text></g><g><title>_strptime_datetime (_strptime.py:577) (287 samples, 4.21%)</title><rect x="71.9424%" y="372" width="4.2138%" height="15" fill="rgb(216,154,8)"/><text x="72.1924%" y="382.50">_strp..</text></g><g><title>_get_cell_type_value (account_reports/models/account_report.py:1598) (576 samples, 8.46%)</title><rect x="67.8021%" y="356" width="8.4569%" height="15" fill="rgb(244,35,45)"/><text x="68.0521%" y="366.50">_get_cell_ty..</text></g><g><title>get_xlsx (account_reports/models/account_report.py:1575) (1,096 samples, 16.09%)</title><rect x="60.2555%" y="340" width="16.0916%" height="15" fill="rgb(251,115,12)"/><text x="60.5055%" y="350.50">get_xlsx (account_reports..</text></g><g><title>_write (xlsxwriter/worksheet.py:430) (87 samples, 1.28%)</title><rect x="79.6799%" y="388" width="1.2773%" height="15" fill="rgb(240,54,50)"/><text x="79.9299%" y="398.50"></text></g><g><title>get_xlsx (account_reports/models/account_report.py:1579) (478 samples, 7.02%)</title><rect x="77.0225%" y="340" width="7.0181%" height="15" fill="rgb(233,84,52)"/><text x="77.2725%" y="350.50">get_xlsx ..</text></g><g><title>cell_wrapper (xlsxwriter/worksheet.py:67) (421 samples, 6.18%)</title><rect x="77.8593%" y="356" width="6.1812%" height="15" fill="rgb(207,117,47)"/><text x="78.1093%" y="366.50">cell_wra..</text></g><g><title>write (xlsxwriter/worksheet.py:408) (400 samples, 5.87%)</title><rect x="78.1677%" y="372" width="5.8729%" height="15" fill="rgb(249,43,39)"/><text x="78.4177%" y="382.50">write (..</text></g><g><title>_write (xlsxwriter/worksheet.py:433) (209 samples, 3.07%)</title><rect x="80.9720%" y="388" width="3.0686%" height="15" fill="rgb(209,38,44)"/><text x="81.2220%" y="398.50">_wr..</text></g><g><title>_write_token_as_string (xlsxwriter/worksheet.py:389) (127 samples, 1.86%)</title><rect x="82.1759%" y="404" width="1.8646%" height="15" fill="rgb(236,212,23)"/><text x="82.4259%" y="414.50">_..</text></g><g><title>_write_cell (xlsxwriter/worksheet.py:5584) (77 samples, 1.13%)</title><rect x="86.6393%" y="468" width="1.1305%" height="15" fill="rgb(242,79,21)"/><text x="86.8893%" y="478.50"></text></g><g><title>_write_cell (xlsxwriter/worksheet.py:5590) (73 samples, 1.07%)</title><rect x="88.2102%" y="468" width="1.0718%" height="15" fill="rgb(211,96,35)"/><text x="88.4602%" y="478.50"></text></g><g><title>_write_cell (xlsxwriter/worksheet.py:5606) (109 samples, 1.60%)</title><rect x="89.7372%" y="468" width="1.6004%" height="15" fill="rgb(253,215,40)"/><text x="89.9872%" y="478.50"></text></g><g><title>_xml_string_element (xlsxwriter/xmlwriter.py:107) (73 samples, 1.07%)</title><rect x="91.6605%" y="484" width="1.0718%" height="15" fill="rgb(211,81,21)"/><text x="91.9105%" y="494.50"></text></g><g><title>_write_cell (xlsxwriter/worksheet.py:5614) (129 samples, 1.89%)</title><rect x="91.4990%" y="468" width="1.8940%" height="15" fill="rgb(208,190,38)"/><text x="91.7490%" y="478.50">_..</text></g><g><title>_write_cell (xlsxwriter/worksheet.py:5683) (93 samples, 1.37%)</title><rect x="93.4811%" y="468" width="1.3654%" height="15" fill="rgb(235,213,38)"/><text x="93.7311%" y="478.50"></text></g><g><title>_write_rows (xlsxwriter/worksheet.py:5425) (586 samples, 8.60%)</title><rect x="86.2869%" y="452" width="8.6037%" height="15" fill="rgb(237,122,38)"/><text x="86.5369%" y="462.50">_write_rows ..</text></g><g><title>_create_package (xlsxwriter/packager.py:132) (741 samples, 10.88%)</title><rect x="84.1139%" y="388" width="10.8795%" height="15" fill="rgb(244,218,35)"/><text x="84.3639%" y="398.50">_create_package ..</text></g><g><title>_write_worksheet_files (xlsxwriter/packager.py:190) (741 samples, 10.88%)</title><rect x="84.1139%" y="404" width="10.8795%" height="15" fill="rgb(240,68,47)"/><text x="84.3639%" y="414.50">_write_worksheet..</text></g><g><title>_assemble_xml_file (xlsxwriter/worksheet.py:3741) (741 samples, 10.88%)</title><rect x="84.1139%" y="420" width="10.8795%" height="15" fill="rgb(210,16,53)"/><text x="84.3639%" y="430.50">_assemble_xml_fi..</text></g><g><title>_write_sheet_data (xlsxwriter/worksheet.py:5232) (741 samples, 10.88%)</title><rect x="84.1139%" y="436" width="10.8795%" height="15" fill="rgb(235,124,12)"/><text x="84.3639%" y="446.50">_write_sheet_dat..</text></g><g><title>_store_workbook (xlsxwriter/workbook.py:649) (957 samples, 14.05%)</title><rect x="84.1139%" y="372" width="14.0508%" height="15" fill="rgb(224,169,11)"/><text x="84.3639%" y="382.50">_store_workbook (xlsx..</text></g><g><title>_create_package (xlsxwriter/packager.py:140) (216 samples, 3.17%)</title><rect x="94.9934%" y="388" width="3.1713%" height="15" fill="rgb(250,166,2)"/><text x="95.2434%" y="398.50">_cr..</text></g><g><title>_write_shared_strings_file (xlsxwriter/packager.py:287) (216 samples, 3.17%)</title><rect x="94.9934%" y="404" width="3.1713%" height="15" fill="rgb(242,216,29)"/><text x="95.2434%" y="414.50">_wr..</text></g><g><title>_assemble_xml_file (xlsxwriter/sharedstrings.py:54) (216 samples, 3.17%)</title><rect x="94.9934%" y="420" width="3.1713%" height="15" fill="rgb(230,116,27)"/><text x="95.2434%" y="430.50">_as..</text></g><g><title>_write_sst_strings (xlsxwriter/sharedstrings.py:84) (215 samples, 3.16%)</title><rect x="95.0081%" y="436" width="3.1567%" height="15" fill="rgb(228,99,48)"/><text x="95.2581%" y="446.50">_wr..</text></g><g><title>&lt;module&gt; (odoo-bin:8) (6,810 samples, 99.99%)</title><rect x="0.0000%" y="52" width="99.9853%" height="15" fill="rgb(253,11,6)"/><text x="0.2500%" y="62.50">&lt;module&gt; (odoo-bin:8)</text></g><g><title>main (odoo/cli/command.py:61) (6,810 samples, 99.99%)</title><rect x="0.0000%" y="68" width="99.9853%" height="15" fill="rgb(247,143,39)"/><text x="0.2500%" y="78.50">main (odoo/cli/command.py:61)</text></g><g><title>run (odoo/cli/shell.py:125) (6,810 samples, 99.99%)</title><rect x="0.0000%" y="84" width="99.9853%" height="15" fill="rgb(236,97,10)"/><text x="0.2500%" y="94.50">run (odoo/cli/shell.py:125)</text></g><g><title>shell (odoo/cli/shell.py:118) (6,810 samples, 99.99%)</title><rect x="0.0000%" y="100" width="99.9853%" height="15" fill="rgb(233,208,19)"/><text x="0.2500%" y="110.50">shell (odoo/cli/shell.py:118)</text></g><g><title>console (odoo/cli/shell.py:82) (6,810 samples, 99.99%)</title><rect x="0.0000%" y="116" width="99.9853%" height="15" fill="rgb(216,164,2)"/><text x="0.2500%" y="126.50">console (odoo/cli/shell.py:82)</text></g><g><title>ipython (odoo/cli/shell.py:91) (6,810 samples, 99.99%)</title><rect x="0.0000%" y="132" width="99.9853%" height="15" fill="rgb(220,129,5)"/><text x="0.2500%" y="142.50">ipython (odoo/cli/shell.py:91)</text></g><g><title>start_ipython (IPython/__init__.py:130) (6,810 samples, 99.99%)</title><rect x="0.0000%" y="148" width="99.9853%" height="15" fill="rgb(242,17,10)"/><text x="0.2500%" y="158.50">start_ipython (IPython/__init__.py:130)</text></g><g><title>launch_instance (traitlets/config/application.py:846) (6,810 samples, 99.99%)</title><rect x="0.0000%" y="164" width="99.9853%" height="15" fill="rgb(242,107,0)"/><text x="0.2500%" y="174.50">launch_instance (traitlets/config/application.py:846)</text></g><g><title>start (IPython/terminal/ipapp.py:356) (6,810 samples, 99.99%)</title><rect x="0.0000%" y="180" width="99.9853%" height="15" fill="rgb(251,28,31)"/><text x="0.2500%" y="190.50">start (IPython/terminal/ipapp.py:356)</text></g><g><title>mainloop (IPython/terminal/interactiveshell.py:566) (6,810 samples, 99.99%)</title><rect x="0.0000%" y="196" width="99.9853%" height="15" fill="rgb(233,223,10)"/><text x="0.2500%" y="206.50">mainloop (IPython/terminal/interactiveshell.py:566)</text></g><g><title>interact (IPython/terminal/interactiveshell.py:557) (6,779 samples, 99.53%)</title><rect x="0.4551%" y="212" width="99.5302%" height="15" fill="rgb(215,21,27)"/><text x="0.7051%" y="222.50">interact (IPython/terminal/interactiveshell.py:557)</text></g><g><title>run_cell (IPython/core/interactiveshell.py:2915) (6,779 samples, 99.53%)</title><rect x="0.4551%" y="228" width="99.5302%" height="15" fill="rgb(232,23,21)"/><text x="0.7051%" y="238.50">run_cell (IPython/core/interactiveshell.py:2915)</text></g><g><title>_run_cell (IPython/core/interactiveshell.py:2960) (6,777 samples, 99.50%)</title><rect x="0.4845%" y="244" width="99.5008%" height="15" fill="rgb(244,5,23)"/><text x="0.7345%" y="254.50">_run_cell (IPython/core/interactiveshell.py:2960)</text></g><g><title>_pseudo_sync_runner (IPython/core/async_helpers.py:78) (6,777 samples, 99.50%)</title><rect x="0.4845%" y="260" width="99.5008%" height="15" fill="rgb(226,81,46)"/><text x="0.7345%" y="270.50">_pseudo_sync_runner (IPython/core/async_helpers.py:78)</text></g><g><title>run_cell_async (IPython/core/interactiveshell.py:3186) (6,777 samples, 99.50%)</title><rect x="0.4845%" y="276" width="99.5008%" height="15" fill="rgb(247,70,30)"/><text x="0.7345%" y="286.50">run_cell_async (IPython/core/interactiveshell.py:3186)</text></g><g><title>run_ast_nodes (IPython/core/interactiveshell.py:3377) (6,776 samples, 99.49%)</title><rect x="0.4992%" y="292" width="99.4861%" height="15" fill="rgb(212,68,19)"/><text x="0.7492%" y="302.50">run_ast_nodes (IPython/core/interactiveshell.py:3377)</text></g><g><title>run_code (IPython/core/interactiveshell.py:3457) (6,776 samples, 99.49%)</title><rect x="0.4992%" y="308" width="99.4861%" height="15" fill="rgb(240,187,13)"/><text x="0.7492%" y="318.50">run_code (IPython/core/interactiveshell.py:3457)</text></g><g><title>&lt;module&gt; (&lt;ipython-input-1-caff16baaa01&gt;:14) (6,776 samples, 99.49%)</title><rect x="0.4992%" y="324" width="99.4861%" height="15" fill="rgb(223,113,26)"/><text x="0.7492%" y="334.50">&lt;module&gt; (&lt;ipython-input-1-caff16baaa01&gt;:14)</text></g><g><title>get_xlsx (account_reports/models/account_report.py:1581) (1,086 samples, 15.94%)</title><rect x="84.0405%" y="340" width="15.9448%" height="15" fill="rgb(206,192,2)"/><text x="84.2905%" y="350.50">get_xlsx (account_reports..</text></g><g><title>close (xlsxwriter/workbook.py:306) (1,086 samples, 15.94%)</title><rect x="84.0405%" y="356" width="15.9448%" height="15" fill="rgb(241,108,4)"/><text x="84.2905%" y="366.50">close (xlsxwriter/workboo..</text></g><g><title>_store_workbook (xlsxwriter/workbook.py:670) (124 samples, 1.82%)</title><rect x="98.1647%" y="372" width="1.8206%" height="15" fill="rgb(247,173,49)"/><text x="98.4147%" y="382.50">_..</text></g><g><title>writestr (zipfile.py:1805) (121 samples, 1.78%)</title><rect x="98.2088%" y="388" width="1.7765%" height="15" fill="rgb(224,114,35)"/><text x="98.4588%" y="398.50">w..</text></g><g><title>write (zipfile.py:1129) (113 samples, 1.66%)</title><rect x="98.3262%" y="404" width="1.6591%" height="15" fill="rgb(245,159,27)"/><text x="98.5762%" y="414.50"></text></g><g><title>all (6,811 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(245,172,44)"/><text x="0.2500%" y="46.50"></text></g></svg></svg>