# HG changeset patch
# Parent 0000000000000000000000000000000000000000
# Parent  0000000000000000000000000000000000000000

diff --git a/academy/__init__.py b/academy/__init__.py
new file mode 100644
--- /dev/null
+++ b/academy/__init__.py
@@ -0,0 +1,3 @@
+# -*- coding: utf-8 -*-
+import controllers
+import models
diff --git a/academy/__manifest__.py b/academy/__manifest__.py
new file mode 100644
--- /dev/null
+++ b/academy/__manifest__.py
@@ -0,0 +1,34 @@
+# -*- coding: utf-8 -*-
+{
+    'name': "Academy",
+
+    'summary': """
+        Short (1 phrase/line) summary of the module's purpose, used as
+        subtitle on modules listing or apps.odoo.com""",
+
+    'description': """
+        Long description of module's purpose
+    """,
+
+    'author': "My Company",
+    'website': "https://www.yourcompany.com",
+
+    # Categories can be used to filter modules in modules listing
+    # Check https://github.com/odoo/odoo/blob/12.0/odoo/addons/base/data/ir_module_category_data.xml
+    # for the full list
+    'category': 'Uncategorized',
+    'version': '0.1',
+
+    # any module necessary for this one to work correctly
+    'depends': ['base'],
+
+    # always loaded
+    'data': [
+        # 'security/ir.model.access.csv',
+        'templates.xml',
+    ],
+    # only loaded in demonstration mode
+    'demo': [
+        'demo.xml',
+    ],
+}
diff --git a/academy/controllers.py b/academy/controllers.py
new file mode 100644
--- /dev/null
+++ b/academy/controllers.py
@@ -0,0 +1,20 @@
+# -*- coding: utf-8 -*-
+from odoo import http
+
+# class Academy(http.Controller):
+#     @http.route('/academy/academy/', auth='public')
+#     def index(self, **kw):
+#         return "Hello, world"
+
+#     @http.route('/academy/academy/objects/', auth='public')
+#     def list(self, **kw):
+#         return http.request.render('academy.listing', {
+#             'root': '/academy/academy',
+#             'objects': http.request.env['academy.academy'].search([]),
+#         })
+
+#     @http.route('/academy/academy/objects/<model("academy.academy"):obj>/', auth='public')
+#     def object(self, obj, **kw):
+#         return http.request.render('academy.object', {
+#             'object': obj
+#         })
diff --git a/academy/demo.xml b/academy/demo.xml
new file mode 100644
--- /dev/null
+++ b/academy/demo.xml
@@ -0,0 +1,25 @@
+<odoo>
+
+        <!--  -->
+        <!--   <record id="object0" model="academy.academy"> -->
+        <!--     <field name="name">Object 0</field> -->
+        <!--   </record> -->
+        <!--  -->
+        <!--   <record id="object1" model="academy.academy"> -->
+        <!--     <field name="name">Object 1</field> -->
+        <!--   </record> -->
+        <!--  -->
+        <!--   <record id="object2" model="academy.academy"> -->
+        <!--     <field name="name">Object 2</field> -->
+        <!--   </record> -->
+        <!--  -->
+        <!--   <record id="object3" model="academy.academy"> -->
+        <!--     <field name="name">Object 3</field> -->
+        <!--   </record> -->
+        <!--  -->
+        <!--   <record id="object4" model="academy.academy"> -->
+        <!--     <field name="name">Object 4</field> -->
+        <!--   </record> -->
+        <!--  -->
+
+</odoo>
diff --git a/academy/models.py b/academy/models.py
new file mode 100644
--- /dev/null
+++ b/academy/models.py
@@ -0,0 +1,8 @@
+# -*- coding: utf-8 -*-
+
+from odoo import models, fields, api
+
+# class academy(models.Model):
+#     _name = 'academy.academy'
+
+#     name = fields.Char()
diff --git a/academy/security/ir.model.access.csv b/academy/security/ir.model.access.csv
new file mode 100644
--- /dev/null
+++ b/academy/security/ir.model.access.csv
@@ -0,0 +1,2 @@
+id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
+access_academy_academy,academy.academy,model_academy_academy,,1,0,0,0
diff --git a/academy/templates.xml b/academy/templates.xml
new file mode 100644
--- /dev/null
+++ b/academy/templates.xml
@@ -0,0 +1,22 @@
+<odoo>
+
+        <!-- <template id="listing"> -->
+        <!--   <ul> -->
+        <!--     <li t-foreach="objects" t-as="object"> -->
+        <!--       <a t-attf-href="#{ root }/objects/#{ object.id }"> -->
+        <!--         <t t-esc="object.display_name"/> -->
+        <!--       </a> -->
+        <!--     </li> -->
+        <!--   </ul> -->
+        <!-- </template> -->
+        <!-- <template id="object"> -->
+        <!--   <h1><t t-esc="object.display_name"/></h1> -->
+        <!--   <dl> -->
+        <!--     <t t-foreach="object._fields" t-as="field"> -->
+        <!--       <dt><t t-esc="field"/></dt> -->
+        <!--       <dd><t t-esc="object[field]"/></dd> -->
+        <!--     </t> -->
+        <!--   </dl> -->
+        <!-- </template> -->
+
+</odoo>
